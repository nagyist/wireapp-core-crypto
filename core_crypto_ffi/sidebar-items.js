window.SIDEBAR_ITEMS = {"enum":[["CiphersuiteName","MLS ciphersuites."],["CryptoError","CoreCrypto errors"],["MlsPublicGroupStateEncryptionType","PublicGroupStateEncryptionType"],["MlsRatchetTreeType","RatchetTreeType"],["MlsWirePolicy","Wrapper over WireFormatPolicy"],["PublicGroupStatePayload","Represents the byte array in [PublicGroupStateBundle]"]],"mod":[["bindings","CoreCrypto FFI Details"]],"struct":[["ClientId","A unique identifier for clients. A client is an identifier for each App a user is using, such as desktop, mobile, etc. Users can have multiple clients. More information here"],["CommitBundle",""],["ConversationConfiguration","See [core_crypto::prelude::MlsConversationConfiguration]"],["ConversationInitBundle",""],["CoreCrypto",""],["CustomConfiguration","See [core_crypto::prelude::MlsCustomConfiguration]"],["DecryptedMessage","See [core_crypto::prelude::decrypt::MlsConversationDecryptMessage]"],["Invitee",""],["MemberAddedMessages","see [core_crypto::prelude::MlsConversationCreationMessage]"],["MlsPublicGroupStateBundle","A [PublicGroupState] with metadata"],["ProposalBundle",""],["PublicGroupStateBundle",""]],"trait":[["CoreCryptoCallbacks","This trait is used to provide callback mechanisms for the MlsCentral struct, for example for operations like adding or removing memebers that can be authorized through a caller provided authorization method."],["Serialize","The `Serialize` trait provides functions to serialize a struct or enum."]],"type":[["ConversationId","A unique identifier for a group/conversation. The identifier must be unique within a client."],["MemberId","Type definition for the identifier of a client in a conversation (aka Member)"]]};