var searchIndex = JSON.parse('{\
"core_crypto":{"doc":"Core Crypto is a wrapper on top of OpenMLS aimed to â€¦","t":[13,13,13,13,13,13,3,8,4,6,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,10,11,11,10,11,11,11,11,11,11,11,11,11,11,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,3,4,13,3,3,13,13,13,6,3,13,13,2,2,3,4,6,4,13,13,13,18,3,13,13,3,13,13,13,13,13,13,13,3,6,13,13,13,13,13,13,13,13,13,13,13,6,13,13,2,3,2,3,13,3,3,3,3,3,13,13,3,13,4,13,13,13,13,13,3,3,13,13,13,13,13,13,13,13,13,4,3,3,13,3,4,4,13,13,13,13,13,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,4,6,13,13,13,13,13,13,13,3,13,13,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,0,11,12,11,11,11,11,11,12,0,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,0,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,3,3,4,13,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,12,11,11,12,11,11,11,11,11,12,11,11,12,12,12,11,11,11,11,3,3,3,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CallbacksNotSet","ClientNotFound","ClientSignatureMismatch","ClientSignatureNotFound","ConversationNotFound","ConvertIntError","CoreCrypto","CoreCryptoCallbacks","CryptoError","CryptoResult","CryptoboxMigrationError","CryptoboxMigrationError","DecryptionError","GenerationOutOfBound","HexDecodeError","ImplementationError","InvalidByteArrayError","InvalidHashReference","InvalidKeyPackage","IoError","KeyStoreError","LockPoisonError","MalformedIdentifier","MissingKeyInValue","MlsAddMembersError","MlsCommitToPendingProposalsError","MlsCredentialError","MlsCryptoError","MlsEmptyInputError","MlsError","MlsError","MlsErrorString","MlsExportPublicGroupStateError","MlsExportSecretError","MlsExternalCommitError","MlsInvalidMessageError","MlsKeyPackageBundleNewError","MlsKeystoreSerializationError","MlsLibraryError","MlsMessageError","MlsMlsGroupStateError","MlsNewGroupError","MlsNotInitialized","MlsParseMessageError","MlsProviderError","MlsRemoveMembersError","MlsSelfUpdateError","MlsTlsCodecError","MlsUnverifiedMessageError","MlsWelcomeError","OutOfKeyPackage","ParseIntError","PendingCommitNotFound","PendingProposalNotFound","ProposeAddMemberError","ProposeRemoveMemberError","ProposeSelfUpdateError","ProteusDecodeError","ProteusEncodeError","ProteusError","ProteusError","ProteusNotInitialized","ProteusSessionError","ProteusSupportNotEnabled","StringUtf8Error","Unauthorized","UnauthorizedExternalAddProposal","UnauthorizedExternalCommit","Utf8Error","WrongEpoch","WrongValueType","authorize","borrow","borrow_mut","client_is_existing_group_user","deref","deref","deref_mut","deref_mut","drop","fmt","from","from","init","into","mls","prelude","proteus","proteus_cryptobox_migrate","proteus_decrypt","proteus_encrypt","proteus_encrypt_batched","proteus_fingerprint","proteus_fingerprint_local","proteus_fingerprint_remote","proteus_identity","proteus_init","proteus_new_prekey","proteus_new_prekey_auto","proteus_session","proteus_session_delete","proteus_session_exists","proteus_session_from_message","proteus_session_from_prekey","proteus_session_save","take","try_from","try_into","type_id","user_authorize","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","MlsCentral","MlsCiphersuite","add_members_to_conversation","borrow","borrow","borrow_mut","borrow_mut","callbacks","clear_pending_commit","clear_pending_group_from_external_commit","clear_pending_proposal","client_id","client_keypackages","client_public_key","client_valid_keypackages_count","clone","clone_into","close","commit_accepted","commit_pending_proposals","conversation_epoch","conversation_exists","decrypt_message","default","deref","deref","deref","deref_mut","deref_mut","drop","drop","encrypt_message","eq","export_public_group_state","export_secret_key","fmt","fmt","from","from","from","get_client_ids","init","init","into","into","join_by_external_commit","merge_pending_group_from_external_commit","mls_init","new_conversation","new_external_add_proposal","new_external_remove_proposal","new_proposal","process_raw_welcome_message","process_welcome_message","provider","provider_mut","random_bytes","remove_members_from_conversation","restore_from_disk","to_owned","try_from","try_from","try_into","try_into","try_new","try_new_in_memory","type_id","type_id","update_keying_material","vzip","vzip","wipe","wipe_conversation","Add","ByRef","CallbacksNotSet","CertificateBundle","CiphersuiteName","Ciphertext","Client","ClientId","ClientNotFound","ClientSignatureMismatch","ClientSignatureNotFound","ConversationId","ConversationMember","ConversationNotFound","ConvertIntError","CoreCrypto","CoreCryptoCallbacks","Credential","CryptoError","CryptoResult","CryptoboxMigrationError","CryptoboxMigrationError","DecryptionError","Delta","EXPECTED_LEN","EntropySeed","Full","GenerationOutOfBound","GroupEpoch","HexDecodeError","ImplementationError","InvalidByteArrayError","InvalidHashReference","InvalidKeyPackage","IoError","JweEncrypted","KeyPackage","KeyPackageRef","KeyStoreError","LeafNode","LockPoisonError","MLS_128_DHKEMP256_AES128GCM_SHA256_P256","MLS_128_DHKEMX25519_AES128GCM_SHA256_Ed25519","MLS_128_DHKEMX25519_CHACHA20POLY1305_SHA256_Ed25519","MLS_256_DHKEMP384_AES256GCM_SHA384_P384","MLS_256_DHKEMP521_AES256GCM_SHA512_P521","MLS_256_DHKEMX448_AES256GCM_SHA512_Ed448","MLS_256_DHKEMX448_CHACHA20POLY1305_SHA512_Ed448","MalformedIdentifier","MemberId","MissingKeyInValue","MlsAddMembersError","MlsCentral","MlsCentralConfiguration","MlsCiphersuite","MlsCommitBundle","MlsCommitToPendingProposalsError","MlsConversation","MlsConversationConfiguration","MlsConversationCreationMessage","MlsConversationDecryptMessage","MlsConversationInitBundle","MlsCredentialError","MlsCryptoError","MlsCustomConfiguration","MlsEmptyInputError","MlsError","MlsError","MlsErrorString","MlsExportPublicGroupStateError","MlsExportSecretError","MlsExternalCommitError","MlsGroup","MlsGroupConfig","MlsInvalidMessageError","MlsKeyPackageBundleNewError","MlsKeystoreSerializationError","MlsLibraryError","MlsMessageError","MlsMlsGroupStateError","MlsNewGroupError","MlsNotInitialized","MlsParseMessageError","MlsProposal","MlsProposalBundle","MlsProposalRef","MlsProviderError","MlsPublicGroupStateBundle","MlsPublicGroupStateEncryptionType","MlsRatchetTreeType","MlsRemoveMembersError","MlsSelfUpdateError","MlsTlsCodecError","MlsUnverifiedMessageError","MlsWelcomeError","MlsWirePolicy","Node","OutOfKeyPackage","ParentNode","ParseIntError","PendingCommitNotFound","PendingProposalNotFound","Plaintext","Plaintext","Plaintext","ProposeAddMemberError","ProposeRemoveMemberError","ProposeSelfUpdateError","ProteusDecodeError","ProteusEncodeError","ProteusError","ProteusError","ProteusNotInitialized","ProteusSessionError","ProteusSupportNotEnabled","PublicGroupStatePayload","RawEntropySeed","Remove","StringUtf8Error","Unauthorized","UnauthorizedExternalAddProposal","UnauthorizedExternalCommit","Update","Utf8Error","VerifiablePublicGroupState","WrongEpoch","WrongValueType","aad","add_keypackage","add_members","aead_algorithm","aead_key_length","aead_nonce_length","app_msg","as_u64","authentication_secret","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","bytes","certificate_chain","check_extension_support","ciphersuite","ciphersuite","ciphersuite","ciphersuite","ciphersuite","ciphersuites","clear_pending_commit","clear_pending_commit","clear_pending_proposal","clear_pending_proposal","clear_pending_proposals","client_id","clients","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","commit","commit","commit","commit_accepted","commit_to_pending_proposals","compute_next_commit_delay","config","configuration","conversation_id","create","create_message","credential","credential","credentials","custom","decrypt","decrypt_message","default","default","delay","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encrypt","encrypt_message","encryption_type","epoch","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","export","export_public_group_state","export_ratchet_tree","export_secret","export_secret_key","extensions","external_entropy","external_key_id","external_senders","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_payload","from_raw","from_str","from_welcome_message","gen_keypackage","get_client_ids","get_hash","get_hash","get_hash","get_past_resumption_secret","group_context_extensions","group_id","handshake","has_epoch_changed","hash","hash","hash","hash_algorithm","hash_length","hash_ref","hpke_aead_algorithm","hpke_config","hpke_kdf_algorithm","hpke_kem_algorithm","id","id","id","identity","identity_key","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_active","is_active","join_by_external_commit","key_package_ref","key_rotation_span","keypackage_hash","keypackage_lifetime","keypackage_raw_hash","keypackages_for_all_clients","leave_group","load","mac_length","max_past_epochs","maximum_forward_distance","member","members","members","members_in_next_epoch","merge","merge_pending_commit","merge_staged_commit","new","new","new_from_welcome","new_raw","number_of_resumption_secrets","out_of_order_tolerance","own_leaf_index","padding_size","parse_message","partial_cmp","payload","pending_commit","pending_proposals","private_key","process_unverified_message","proposal","proposal_ref","proposals","propose_add_member","propose_add_member","propose_extension","propose_remove_member","propose_remove_member","propose_self_update","propose_self_update","provide","provide","provide","provide","prune_keypackages","public_group_state","public_group_state","public_group_state","public_key","ratchet_tree_type","remove_members","request_keying_material","resumption_secret","save","self_update","sender_client_id","sender_ratchet_configuration","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_aad","set_configuration","set_entropy","signature","signature","signature_algorithm","signature_key","signature_scheme","source","source","source","state_changed","store_path","store_pending_proposal","tls_codec","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","to_bytes_pair","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_slice","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_new","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unsigned_payload","unsigned_payload","use_ratchet_tree_extension","valid_keypackages_count","verify","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","welcome","welcome","wire_format_policy","wire_policy","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","Ciphertext","MlsConversationConfiguration","MlsCustomConfiguration","MlsWirePolicy","Plaintext","as_openmls_default_configuration","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","ciphersuite","clone","clone","clone","clone_into","clone_into","clone_into","custom","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","eq","erased_serialize","erased_serialize","external_senders","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","key_rotation_span","maximum_forward_distance","out_of_order_tolerance","serialize","serialize","set_raw_external_senders","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","wire_policy","MlsConversationDecryptMessage","app_msg","borrow","borrow_mut","delay","deref","deref_mut","drop","fmt","from","has_epoch_changed","init","into","is_active","proposals","sender_client_id","try_from","try_into","type_id","vzip","MlsCommitBundle","MlsConversationCreationMessage","MlsProposalBundle","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","commit","commit","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","from","from","from","from","init","init","init","into","into","into","proposal","proposal_ref","public_group_state","public_group_state","to_bytes_pair","to_bytes_triple","to_bytes_triple","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","welcome","welcome","ProteusCentral","ProteusConversationSession","SessionIdentifier","borrow","borrow","borrow_mut","borrow_mut","cryptobox_migrate","decrypt","decrypt","deref","deref","deref_mut","deref_mut","drop","drop","encrypt","encrypt","encrypt_batched","fingerprint","fingerprint_local","fingerprint_local","fingerprint_prekeybundle","fingerprint_remote","fingerprint_remote","fmt","fmt","from","from","identifier","identity","init","init","into","into","new_prekey","new_prekey_auto","session","session_delete","session_exists","session_from_message","session_from_prekey","session_mut","session_save","try_from","try_from","try_into","try_into","try_new","type_id","type_id","vzip","vzip"],"q":["core_crypto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_crypto::CryptoError","","","","","","","","","","","","","","","","","","core_crypto::CryptoboxMigrationError","","core_crypto::MlsError","","","","","","","","","","","","","","","","","","","","","","","","","core_crypto::ProteusError","","","core_crypto::mls","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_crypto::preludecore_crypto::prelude::CryptoError","","","","","","","","","","","","","","","","","","core_crypto::prelude::CryptoboxMigrationError","","core_crypto::prelude::MlsError","","","","","","","","","","","","","","","","","","","","","","","","","core_crypto::prelude::MlsProposal","","core_crypto::prelude::Node","","core_crypto::prelude::ProteusError","","","core_crypto::prelude::PublicGroupStatePayload","core_crypto::prelude::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_crypto::prelude::decrypt","","","","","","","","","","","","","","","","","","","","core_crypto::prelude::handshake","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_crypto::proteus","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Callbacks are not informed","This error is emitted when the requested client couldnâ€™t â€¦","The keystore has found the client, but the provided â€¦","The keystore has no knowledge of such client; this shouldnâ€¦","This error is emitted when the requested conversation â€¦","Error when trying to convert integer sizes - usually when â€¦","Wrapper superstruct for both mls::MlsCentral and â€¦","This trait is used to provide callback mechanisms for the â€¦","CoreCrypto errors","A simpler definition for Result types that the Error is a â€¦","Wrapper for errors that can happen during a Cryptobox â€¦","Cryptobox migration error wrapper","Tried to decrypt a message in the wrong epoch","The client who created this message is likely to have â€¦","Error when trying to decode an hex-encoded string. Usually â€¦","We have done something terribly wrong","Error when trying to coerce a Vec into a [u8 ; N]","A supplied [<code>HashReference</code>] is not of the expected size: 16","Decrypted message uses an invalid KeyPackage (probably â€¦","Standard I/O Error","Errors that are sent by our Keystore","!!!! Something went very wrong and one of our locks has â€¦","This error is emitted when we find a malformed (i.e. not â€¦","Error when trying to fetch a certain key from a structured â€¦","Add members error","Commit to pending proposals error","An error that occurs in methods of a â€¦","OpenMls crypto error","EmptyInput error","MLS-specific error wrapper - see â€¦","MLS Internal Errors","A wrapper struct for an error string. This can be used â€¦","Export public group state error","OpenMls Export Secret error","External Commit error","Create message error","openmls::key_packages::KeyPackageBundle new error","This type represents all possible errors that can occur â€¦","Generic error type that indicates unrecoverable errors in â€¦","MlsMessage error","Group state error","New group error","A MLS operation was requested but MLS hasnâ€™t been â€¦","Parse message error","Errors that are sent by our MLS Provider","Remove members error","Self update error","Errors that are thrown by TLS serialization crate.","Unverified message error","Welcome error","A conversation member is out of local stored keypackages - â€¦","Error when trying to coerce ints into Strings","This error is emitted when a pending commmit couldnâ€™t be â€¦","This error is emitted when a pending proposal couldnâ€™t â€¦","Propose add members error","Propose remove members error","Propose self update error","Error when decoding CBOR and/or decrypting Proteus messages","Error when encoding CBOR and/or decrypting Proteus messages","Wrapper for Proteus-related errors","Proteus Error Wrapper","The proteus client has been called but has not been â€¦","Error when thereâ€™s a critical error within a proteus â€¦","CoreCrypto hasnâ€™t been built with the <code>proteus</code> feature â€¦","Error when parsing <code>String</code>s that are not UTF-8","Authorization error","External Add Proposal Validation failed","External Commit sender was not authorized to perform such","Error when parsing <code>str</code>s that are not UTF-8","Incoming message is for the wrong epoch","Error when trying to coerce a certain value to a certain â€¦","Function responsible for authorizing an operation. Returns â€¦","","","Validates if the given <code>client_id</code> belongs to one of the â€¦","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","MLS Abstraction","Common imports that should be useful for most uses of the â€¦","Proteus Abstraction","Migrates an existing Cryptobox data store (whether a â€¦","Decrypts a proteus message envelope","Encrypts proteus message for a given session ID","Encrypts a proteus message for several sessions ID. This â€¦","Returns the proteus identityâ€™s public key fingerprint","Returns the proteus identityâ€™s public key fingerprint","Returns the proteus identityâ€™s public key fingerprint","Returns the proteus identity keypair","Initializes the proteus client","Creates a new Proteus prekey and returns the â€¦","Creates a new Proteus prekey with an automatically â€¦","Proteus session accessor","Deletes a proteus session from the keystore","Proteus session exists","Creates a proteus session from a Proteus message envelope","Creates a proteus session from a prekey","Saves a proteus session in the keystore","Allows to extract the MLS Client from the wrapper â€¦","","","","Function responsible for authorizing an operation for a â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The entry point for the MLS CoreCrypto library. This â€¦","A wrapper for the OpenMLS Ciphersuite, so that we are able â€¦","Adds new members to the group/conversation","","","","","Sets the consumer callbacks (i.e authorization callbacks â€¦","Allows to remove a pending commit. Use this when backend â€¦","In case the external commit generated by [â€¦","Allows to remove a pending (uncommitted) proposal. Use â€¦","Returns the clientâ€™s id as a buffer","Returns <code>amount_requested</code> OpenMLS <code>KeyPackageBundle</code>s. Will â€¦","Returns the clientâ€™s public key as a buffer","Returns the count of valid, non-expired, unclaimed â€¦","","","Closes the connection with the local KeyStore","The commit we created has been accepted by the Delivery â€¦","Commits all pending proposals of the group","Returns the epoch of a given conversation","Checks if a given conversation id exists locally","Deserializes a TLS-serialized message, then deciphers it","","","","","","","","","Encrypts a raw payload then serializes it to the TLS wire â€¦","","Exports a TLS-serialized view of the current group state â€¦","Derives a new key from the one in the group, allowing it â€¦","","","","Returns the argument unchanged.","Returns the argument unchanged.","Exports the clients from a conversation","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Issues an external commit and stores the group in a â€¦","This merges the commit generated by [â€¦","Initializes the MLS client if [CoreCrypto] has previously â€¦","Create a new empty conversation","Crafts a new external Add proposal. Enables a client â€¦","Crafts a new external Remove proposal. Enables a client â€¦","Creates a new proposal within a group","Create a conversation from a TLS serialized MLS Welcome â€¦","Create a conversation from a received MLS Welcome message","Returns a reference for the internal Crypto Provider","Returns a mutable reference for the internal Crypto â€¦","Generates a random byte array of the specified size","Removes clients from the group/conversation.","MlsCentral is supposed to be a singleton. Knowing that, it â€¦","","","","","","Tries to initialize the MLS Central object. Takes a store â€¦","Same as the [crate::MlsCentral::try_new] but instead, it â€¦","","","Self updates the KeyPackage and automatically commits. â€¦","","","Destroys everything we have, in-memory and on disk.","Destroys a group locally","Requests that a client with a specified KeyPackage be â€¦","TODO: to define","Callbacks are not informed","Represents a x509 certificate chain supplied by the client â€¦","MLS ciphersuites.","Handshake messages are always encrypted","Represents a MLS client which in our case is the â€¦","A unique identifier for clients. A client is an identifier â€¦","This error is emitted when the requested client couldnâ€™t â€¦","The keystore has found the client, but the provided â€¦","The keystore has no knowledge of such client; this shouldnâ€¦","A unique identifier for a group/conversation. The â€¦","Represents a client withing a group","This error is emitted when the requested conversation â€¦","Error when trying to convert integer sizes - usually when â€¦","","","Credential.","CoreCrypto errors","A simpler definition for Result types that the Error is a â€¦","Wrapper for errors that can happen during a Cryptobox â€¦","Cryptobox migration error wrapper","Tried to decrypt a message in the wrong epoch","Contains PublicGroupState changes since previous epoch â€¦","","Wrapped 32-byte entropy seed with bounds check","Plain old and complete PublicGroupState","The client who created this message is likely to have â€¦","Group epoch. Internally this is stored as a <code>u64</code>. The group â€¦","Error when trying to decode an hex-encoded string. Usually â€¦","We have done something terribly wrong","Error when trying to coerce a Vec into a [u8 ; N]","A supplied [<code>HashReference</code>] is not of the expected size: 16","Decrypted message uses an invalid KeyPackage (probably â€¦","Standard I/O Error","PublicGroupState encrypted in a JWE","The key package struct.","A reference to a key package. This value uniquely â€¦","Errors that are sent by our Keystore","","!!!! Something went very wrong and one of our locks has â€¦","DH KEM P256 | AES-GCM 128 | SHA2-256 | EcDSA P256","DH KEM x25519 | AES-GCM 128 | SHA2-256 | Ed25519","DH KEM x25519 | Chacha20Poly1305 | SHA2-256 | Ed25519","DH KEM P384 | AES-GCM 256 | SHA2-384 | EcDSA P384","DH KEM P521 | AES-GCM 256 | SHA2-512 | EcDSA P521","DH KEM x448 | AES-GCM 256 | SHA2-512 | Ed448","DH KEM x448 | Chacha20Poly1305 | SHA2-512 | Ed448","This error is emitted when we find a malformed (i.e. not â€¦","Type definition for the identifier of a client in a â€¦","Error when trying to fetch a certain key from a structured â€¦","Add members error","","Configuration parameters for <code>MlsCentral</code>","","Returned when a commit is created","Commit to pending proposals error","This type will store the state of a group. With the â€¦","The configuration parameters for a group/conversation","Returned when initializing a conversation through a commit.","Represents the potential items a consumer might require â€¦","Returned when a commit is created","An error that occurs in methods of a â€¦","OpenMls crypto error","The configuration parameters for a group/conversation â€¦","EmptyInput error","MLS-specific error wrapper - see â€¦","MLS Internal Errors","A wrapper struct for an error string. This can be used â€¦","Export public group state error","OpenMls Export Secret error","External Commit error","A <code>MlsGroup</code> represents an MLS group with a high-level API. â€¦","Specifies the configuration parameters for a <code>MlsGroup</code>. â€¦","Create message error","openmls::key_packages::KeyPackageBundle new error","This type represents all possible errors that can occur â€¦","Generic error type that indicates unrecoverable errors in â€¦","MlsMessage error","Group state error","New group error","A MLS operation was requested but MLS hasnâ€™t been â€¦","Parse message error","Internal representation of proposal to ease further â€¦","Returned when a commit is created","Abstraction over a openmls::prelude::hash_ref::ProposalRef â€¦","Errors that are sent by our MLS Provider","A PublicGroupState with metadata","PublicGroupStateEncryptionType","RatchetTreeType","Remove members error","Self update error","Errors that are thrown by TLS serialization crate.","Unverified message error","Welcome error","Wrapper over WireFormatPolicy","Container enum for leaf and parent nodes.","A conversation member is out of local stored keypackages - â€¦","","Error when trying to coerce ints into Strings","This error is emitted when a pending commmit couldnâ€™t be â€¦","This error is emitted when a pending proposal couldnâ€™t â€¦","Handshake messages are never encrypted","Unencrypted PublicGroupState","Unencrypted PublicGroupState","Propose add members error","Propose remove members error","Propose self update error","Error when decoding CBOR and/or decrypting Proteus messages","Error when encoding CBOR and/or decrypting Proteus messages","Wrapper for Proteus-related errors","Proteus Error Wrapper","The proteus client has been called but has not been â€¦","Error when thereâ€™s a critical error within a proteus â€¦","CoreCrypto hasnâ€™t been built with the <code>proteus</code> feature â€¦","Represents the byte array in [PublicGroupStateBundle]","32-byte raw entropy seed","Requests that the member with LeafNodeRef removed be â€¦","Error when parsing <code>String</code>s that are not UTF-8","Authorization error","External Add Proposal Validation failed","External Commit sender was not authorized to perform such","Similar mechanism to Add with the distinction that it â€¦","Error when parsing <code>str</code>s that are not UTF-8","The <code>VerifiablePublicGroupState</code> represents a â€¦","Incoming message is for the wrong epoch","Error when trying to coerce a certain value to a certain â€¦","Returns the AAD used in the framing.","Adds a new <code>KeyPackage</code> to the internal state.","Adds members to the group.","Get the <code>AeadType</code> for this <code>Ciphersuite</code>.","Returns the key size of the used AEAD.","Returns the length of the nonce of the AEAD.","Decrypted text message","Returns the group epoch as a <code>u64</code>.","Returns the authentication secret of the current epoch.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a builder for <code>MlsGroupConfig</code>","Returns the internal byte array","x509 certificate chain First entry is the leaf certificate â€¦","Check whether the this key package supports all the â€¦","Returns the Ciphersuite from the client","Returns the groupâ€™s ciphersuite.","Get the <code>Ciphersuite</code>.","Returns a reference to the <code>Ciphersuite</code> of the unverified â€¦","The <code>OpenMls</code> Ciphersuite used in the group","All supported ciphersuites TODO: pending wire-server API â€¦","see MlsCentral::clear_pending_commit","Sets the <code>group_state</code> to <code>MlsGroupState::Operational</code>, thus â€¦","see MlsCentral::clear_pending_proposal","Clears a pending proposal by reference","Clears any pending proposal","Identifier for the client to be used by MlsCentral","Returns an <code>Iterator</code> from the clients ids","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Commit message adding members to the group","The commit message","The external commit message","see MlsCentral::commit_accepted","Creates a Commit message that covers the pending proposals â€¦","Helps consumer by providing a deterministic delay in â€¦","Conversation configuration.","Returns the configuration.","Identifier of the conversation joined by external commit","Creates a new group/conversation","Creates an application message. Returns â€¦","Returns own credential. If the group is inactive, it â€¦","Get a reference to the <code>Credential</code>.","Returns the clientâ€™s <code>CredentialBundle</code> (â€¦","Implementation specific configuration","MLS defines 3 kind of messages: Proposal, Commits and â€¦","see MlsCentral::decrypt_message","","","delay time in seconds to feed caller timer for committing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Application messages are actual text messages user â€¦","see MlsCentral::encrypt_message It is durable because â€¦","Indicates if the [payload] is encrypted or not","Returns the epoch.","","","","","","","","","","","","","","","","","","","","","","","","","Primitives to export data from a group, such as derived â€¦","Exports the public group state.","Exports the Ratchet Tree.","Exports a secret from the current epoch. Returns â€¦","See MlsCentral::export_secret_key","Get a reference to the extensions of this key package.","Entropy pool seed for the internal PRNG","Get the external ID of this key package as byte slice. See â€¦","Delivery service public signature key and credential","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Create the MLS conversation from an MLS Welcome message","Generates a single new keypackage","See MlsCentral::get_client_ids","","","","Returns a resumption secret for a given epoch. If no â€¦","Get a groupâ€™s <code>Extension</code>.","Returns the group ID.","Handshake refers here to either a commit or proposal â€¦","Is the epoch changed after decrypting this message","","","","Get the <code>HashType</code> for this <code>Ciphersuite</code>","Get the length of the used hash algorithm.","Compute the <code>KeyPackageRef</code> of this <code>KeyPackage</code>. The â€¦","Get the <code>HpkeAeadType</code> for this <code>Ciphersuite</code>.","Get the <code>HpkeConfig</code> for this <code>Ciphersuite</code>.","Get the <code>HpkeKdfType</code> for this <code>Ciphersuite</code>.","Get the <code>HpkeKemType</code> for this <code>Ciphersuite</code>.","Retrieves the clientâ€™s client id. This is free-form and â€¦","Group/conversation id","Returns a reference to the Client/Member id","Returns the identity of a given credential.","Identity key to be used to instantiate the â€¦","","","","","","","","","Initializes the client. If the clientâ€™s cryptographic â€¦","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns whether the own client is still a member of the â€¦","Is the conversation still active after receiving this â€¦","Join an existing group through an External Commit. The â€¦","Returns the <code>KeyPackageRef</code> of the client owning this group.","Duration in seconds after which we will automatically â€¦","This method returns the hash of the oldest available â€¦","Allows to set the current default keypackage lifetime â€¦","This method returns the hash of the oldest available â€¦","Returns the KeyPackages from all clients, poping the last â€¦","Leave the group.","Loads the state from persisted state.","Get the length of the AEAD tag.","Returns the <code>MlsGroupConfig</code> max past epochs.","How many application messages can be skipped. Use this â€¦","Returns the <code>KeyPackage</code> of a member corresponding to the â€¦","Returns all members credentials from the group/conversation","Returns a list of <code>KeyPackage</code>s of the current group members.","Get actual group members and subtract pending remove â€¦","A MLS group can be merged (aka committed) when it has a â€¦","Merges the pending <code>StagedCommit</code> if there is one, and â€¦","Merge a StagedCommit into the group after inspection. As â€¦","Creates a new member from a keypackage and client id","Creates a new group from scratch with only the creator as â€¦","Creates a new group from a <code>Welcome</code> message. Returns an â€¦","Creates a new member from a TLS-serialized keypackage","Returns the <code>MlsGroupConfig</code> number of resumption secrets.","Window for which decryption secrets are kept within an â€¦","Get the leaf index of this client.","Returns the <code>MlsGroupConfig</code> padding size.","Parses incoming messages from the DS. Checks for syntactic â€¦","","The PublicGroupState","Returns a reference to the <code>StagedCommit</code> of the most â€¦","Returns an <code>Iterator</code> over pending proposals.","Leaf certificate private key","This processing function does most of the semantic â€¦","The proposal message","An identifier of the proposal to rollback it later if â€¦","Only when decrypted message is a commit, CoreCrypto will â€¦","see openmls::group::MlsGroup::propose_add_member","Creates proposals to add members to the group.","Creates proposals to update extensions of the group. This â€¦","see openmls::group::MlsGroup::propose_remove_member","Creates proposals to remove members from the group.","see openmls::group::MlsGroup::propose_self_update","Creates a proposal to update the own leaf node.","","","","","Prune the provided KeyPackageRefs from the keystore","[<code>PublicGroupState</code>] (aka GroupInfo) if the commit is merged","[<code>PublicGroupState</code>] (aka GroupInfo) if the commit is merged","[<code>PublicGroupState</code>] (aka GroupInfo) which becomes valid â€¦","Returns the clientâ€™s public signature key from its â€¦","Indicates if the [payload] contains a full, partial or â€¦","Removes members from the group.","Requests <code>count</code> keying material to be present and returns a â€¦","Returns the resumption secret of the current epoch.","Persists the state.","Updates the own leaf node.","ClientId of the sender of the message being decrypted. â€¦","Returns the <code>MlsGroupConfig</code> sender ratchet configuration.","","","","","","","","","","","","Sets the AAD used in the framing.","Sets the configuration.","Sets the entropy seed","","","Get the <code>SignatureScheme</code> for this <code>Ciphersuite</code>.","Returns the public key contained in the credential.","Returns the signature scheme used by the credential.","","","","Returns <code>true</code> if the internal state has changed and needs â€¦","Location where the SQLite/IndexedDB database will be stored","Stores a standalone proposal in the internal ProposalStore","","","","","","","","","","","","","","","","","","","","","","","","","","","","Serializes both wrapped objects into TLS and return them â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new instance of the configuration.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the <code>MlsGroupConfig</code> boolean flag that indicates â€¦","Returns the count of valid, non-expired, unclaimed â€¦","Verifies a signature of a given payload against the public â€¦","Verify that this key package is valid:","","","","","","","","","","","","","","","","","","","","","","","","","","","A welcome message for new members to join the group","A welcome message if there are pending Add proposals","Returns the <code>MlsGroupConfig</code> wire format policy.","Defines if handshake messages are encrypted or not","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Handshake messages are always encrypted","The configuration parameters for a group/conversation","The configuration parameters for a group/conversation â€¦","Wrapper over WireFormatPolicy","Handshake messages are never encrypted","Generates an <code>MlsGroupConfig</code> from this configuration","","","","","","","The <code>OpenMls</code> Ciphersuite used in the group","","","","","","","Implementation specific configuration","","","","","","","","","","","","","","","","","","Delivery service public signature key and credential","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Duration in seconds after which we will automatically â€¦","How many application messages can be skipped. Use this â€¦","Window for which decryption secrets are kept within an â€¦","","","Parses supplied key from Delivery Service in order to â€¦","","","","","","","","","","","","","","","","Defines if handshake messages are encrypted or not","Represents the potential items a consumer might require â€¦","Decrypted text message","","","delay time in seconds to feed caller timer for committing","","","","","Returns the argument unchanged.","Is the epoch changed after decrypting this message","","Calls <code>U::from(self)</code>.","Is the conversation still active after receiving this â€¦","Only when decrypted message is a commit, CoreCrypto will â€¦","ClientId of the sender of the message being decrypted. â€¦","","","","","Returned when a commit is created","Returned when initializing a conversation through a commit.","Returned when a commit is created","","","","","","","Commit message adding members to the group","The commit message","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The proposal message","An identifier of the proposal to rollback it later if â€¦","[<code>PublicGroupState</code>] (aka GroupInfo) if the commit is merged","[<code>PublicGroupState</code>] (aka GroupInfo) if the commit is merged","Serializes both wrapped objects into TLS and return them â€¦","Serializes both wrapped objects into TLS and return them â€¦","Serializes both wrapped objects into TLS and return them â€¦","","","","","","","","","","","","","A welcome message for new members to join the group","A welcome message if there are pending Add proposals","Proteus counterpart of crate::mls::MlsCentral The big â€¦","Proteus Session wrapper, that contains the identifier and â€¦","Proteus session IDs, it seems itâ€™s basically a string","","","","","Cryptobox -&gt; CoreCrypto migration","Decrypts a message for this Proteus session","Decrypt a proteus message for an already existing session â€¦","","","","","","","Encrypts a message for this Proteus session","Encrypt a message for a session","Encrypts a message for a list of sessions This is mainly â€¦","Proteus Public key hex-encoded fingerprint","Returns the public key fingerprint of the local identity â€¦","Proteus Session local hex-encoded fingerprint","Hex-encoded fingerprint of the given prekey","Returns the public key fingerprint of the remote identity â€¦","Proteus Session remote hex-encoded fingerprint","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the session identifier","Proteus identity keypair","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Generates a new Proteus PreKey, stores it in the keystore â€¦","Generates a new Proteus Prekey, with an automatically â€¦","Session accessor","Deletes a session in the store","Session exists","Creates a new proteus Session from a received message","Creates a new session from a prekey","Session mut accessor","Persists a session in store","","","","","Initializes the ProteusCentral","","","",""],"i":[74,74,74,74,74,74,0,0,0,0,0,74,74,74,74,74,74,74,74,74,74,74,74,77,75,75,75,75,75,0,74,75,75,75,75,75,75,75,75,75,75,75,74,75,74,75,75,75,75,75,74,74,74,74,75,75,75,76,76,0,74,74,76,74,74,74,74,74,74,74,77,22,5,5,22,5,5,5,5,5,5,5,5,5,5,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,22,5,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,0,0,9,25,9,25,9,9,9,9,9,9,9,9,9,25,25,9,9,9,9,9,9,25,25,25,9,25,9,25,9,9,25,9,9,25,9,25,25,9,9,25,9,25,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,25,25,9,25,9,9,9,25,9,9,25,9,9,9,39,62,74,0,0,140,0,0,74,74,74,0,0,74,74,0,0,0,0,0,0,74,74,62,59,0,62,74,0,74,74,74,74,74,74,61,0,0,74,65,74,30,30,30,30,30,30,30,74,0,77,75,0,0,0,0,75,0,0,0,0,0,75,75,0,75,0,74,75,75,75,75,0,0,75,75,75,75,75,75,75,74,75,0,0,0,74,0,0,0,75,75,75,75,75,0,0,74,65,74,74,74,140,61,50,75,75,75,76,76,0,74,74,76,74,0,0,39,74,74,74,74,39,74,0,74,77,44,45,44,30,30,30,29,36,44,59,30,39,74,75,76,77,2,53,60,61,62,50,54,34,33,45,55,43,63,64,44,36,51,31,65,59,30,39,74,75,76,77,2,53,60,61,62,50,54,34,33,45,55,43,63,64,44,36,51,31,65,64,50,34,51,53,44,51,31,35,43,54,44,54,44,44,43,45,59,30,2,53,60,61,62,50,34,45,55,43,63,64,36,51,31,65,59,30,2,53,60,61,62,50,34,45,55,43,63,64,36,51,31,65,21,26,33,54,44,54,0,44,33,54,44,44,51,53,35,0,54,59,64,29,59,59,30,39,74,75,76,77,2,2,53,60,61,62,50,54,34,33,45,55,55,43,63,64,44,36,51,31,65,59,59,30,39,74,75,76,77,2,53,60,61,62,50,54,34,33,45,55,43,63,64,44,36,51,31,65,30,60,61,62,50,63,64,36,51,65,59,59,30,39,74,75,76,77,2,53,60,61,62,50,54,34,33,45,55,43,63,64,44,36,51,31,65,0,54,60,44,59,30,2,53,61,62,45,55,63,64,36,51,65,30,60,61,62,50,63,64,44,36,51,65,0,44,44,44,54,51,43,51,35,59,30,30,74,74,75,75,76,76,77,77,2,2,53,60,61,62,50,54,34,33,45,55,55,43,63,64,44,36,51,31,65,59,30,30,39,74,74,74,74,74,74,74,74,74,74,74,74,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,76,76,76,76,77,2,2,2,2,53,60,61,62,50,54,34,33,45,55,55,43,63,63,64,44,36,36,51,31,65,51,59,2,54,53,54,30,2,36,44,44,44,0,29,30,2,36,30,30,51,30,30,30,30,53,54,45,63,43,59,30,39,74,75,76,77,2,53,53,60,61,62,50,54,34,33,45,55,43,63,64,44,36,51,31,65,59,30,39,74,75,76,77,2,2,53,60,61,62,50,54,34,33,45,55,43,63,64,44,36,51,31,65,44,29,44,44,32,53,53,53,45,44,44,30,64,32,44,54,44,54,0,44,44,45,44,44,45,64,32,44,64,44,36,60,44,44,34,44,40,40,29,54,44,44,54,44,54,44,74,75,76,77,53,21,26,33,53,60,44,53,44,44,44,29,64,30,60,61,62,50,63,64,44,36,51,65,44,44,43,51,31,30,63,63,74,75,76,44,43,44,0,30,63,36,51,31,65,30,30,63,36,36,51,51,31,31,65,30,30,63,36,36,51,51,31,31,65,33,59,30,2,53,60,61,62,50,34,45,55,43,63,64,36,51,31,65,30,74,75,76,77,2,55,59,30,30,39,74,75,76,77,2,53,60,61,62,50,54,34,33,45,55,55,43,63,64,44,36,51,51,31,65,59,59,30,39,74,75,76,77,2,53,60,61,62,50,54,34,33,45,55,43,63,64,44,36,51,31,65,43,59,30,39,74,75,76,77,2,53,60,61,62,50,54,34,33,45,55,43,63,64,44,36,51,31,65,51,31,64,53,63,51,59,30,39,74,75,76,77,2,53,60,61,62,50,54,34,33,45,55,43,63,64,44,36,51,31,65,21,26,64,32,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,191,192,193,194,188,189,190,195,140,0,0,0,140,35,35,32,140,35,32,140,35,35,32,140,35,32,140,35,35,32,140,35,32,140,35,32,140,32,140,35,32,140,140,32,140,35,35,32,140,35,32,140,35,32,140,35,32,140,32,32,32,32,140,35,35,32,140,35,32,140,35,32,140,35,32,140,35,32,140,32,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,0,0,40,21,26,40,21,26,21,26,40,21,26,40,21,26,40,21,26,40,21,26,40,40,21,26,40,21,26,40,21,26,40,40,21,26,40,21,26,40,21,26,40,21,26,40,21,26,40,21,26,21,26,0,0,0,17,142,17,142,142,17,142,17,142,17,142,17,142,17,142,142,142,17,142,142,17,142,17,142,17,142,17,142,17,142,17,142,142,142,142,142,142,142,142,142,142,17,142,17,142,142,17,142,17,142],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],3],[[]],[[]],[[2,[4,[2]]],3],[5],[6],[6],[5],[6],[[5,7],8],[[]],[9,5],[[],6],[[]],0,0,0,[[5,10],11],[[5,10],[[11,[[4,[12]]]]]],[[5,10],[[11,[[4,[12]]]]]],[5,[[11,[[14,[13,[4,[12]]]]]]]],[5,[[11,[13]]]],[[5,10],[[11,[13]]]],[[5,10],[[11,[13]]]],[5,[[11,[15]]]],[5,11],[[5,16],[[11,[[4,[12]]]]]],[5,[[11,[[4,[12]]]]]],[[5,10],[[11,[[18,[17]]]]]],[[5,10],11],[[5,10],[[11,[3]]]],[[5,10],11],[[5,10],[[11,[17]]]],[[5,10],11],[5,9],[[],19],[[],19],[[],20],[[1,2,[4,[2]]],3],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[9,1],[[11,[21]]]],[[]],[[]],[[]],[[]],[[9,[23,[22]]]],[[9,1],11],[[9,1],11],[[9,1,[4,[12]]],11],[9,[[11,[2]]]],[[9,6],[[11,[[4,[24]]]]]],[9,[[11,[[4,[12]]]]]],[9,[[11,[6]]]],[25,25],[[]],[9,11],[[9,1],11],[[9,1],[[11,[[18,[26]]]]]],[[9,1],[[11,[27]]]],[[9,1],3],[[9,1,28],[[11,[29]]]],[[],25],[6],[25],[6],[6],[6],[6],[6],[[9,1,28],[[11,[[4,[12]]]]]],[[25,25],3],[[9,1],[[11,[[4,[12]]]]]],[[9,1,6],[[11,[[4,[12]]]]]],[[25,7],8],[[9,7],8],[30,25],[[]],[[]],[[9,1],[[11,[[4,[2]]]]]],[[],6],[[],6],[[]],[[]],[[9,31,32],[[11,[33]]]],[[9,1],11],[[9,2,[4,[25]],[18,[34]]],11],[[9,1,35],11],[[9,1,36],[[11,[37]]]],[[9,1,36,38],[[11,[37]]]],[[9,1,39],[[11,[40]]]],[[9,[4,[12]],32],[[11,[1]]]],[[9,41,32],[[11,[1]]]],[9,42],[9,42],[[9,6],[[11,[[4,[12]]]]]],[[9,1],[[11,[26]]]],[9,11],[[]],[[],19],[[],19],[[],19],[[],19],[[43,[18,[34]]],[[11,[9]]]],[[43,[18,[34]]],[[11,[9]]]],[[],20],[[],20],[[9,1],[[11,[26]]]],[[]],[[]],[9,11],[[9,1],11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[44],[[45,[4,[12]]],11],[44,46],[30,47],[30,6],[30,6],0,[36,27],[44,48],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],49],[50,[[4,[12]]]],0,[51,[[19,[52]]]],[53,25],[44,30],[51,30],[31,30],0,0,[[54,42],11],[44],[[54,55,42],11],[[44,56],[[19,[57]]]],[44],0,[45,58],[59,59],[30,30],[2,2],[53,53],[60,60],[61,61],[62,62],[50,50],[34,34],[45,45],[55,55],[43,43],[63,63],[64,64],[36,36],[51,51],[31,31],[65,65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[54,42],11],[44,46],[54,[[18,[27]]]],0,[44,64],0,[[1,53,35,42],[[11,[54]]]],[44,46],[44,[[19,[63,57]]]],[51,63],[53,66],0,0,[[54,28,42,[18,[22]]],[[11,[29]]]],[[],59],[[],64],0,[6],[59],[6],[6],[6],[6],[6],[6],[6],[2],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[55],[6],[6],[6],[6],[6],[6],[6],[6],[6],[59],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[],[[19,[30]]]],[[],[[19,[60]]]],[[],[[19,[61]]]],[[],[[19,[62]]]],[[],[[19,[50]]]],[[],[[19,[63]]]],[[],[[19,[64]]]],[[],[[19,[36]]]],[[],[[19,[51]]]],[[],[[19,[65]]]],[6],[59],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],0,[[54,28,42],[[11,[[4,[12]]]]]],0,[44,36],[[59,59],3],[[30,30],3],[[2,2],3],[[53,53],3],[[61,61],3],[[62,62],3],[[45,45],3],[[55,55],3],[[63,63],3],[[64,64],3],[[36,36],3],[[51,51],3],[[65,65],3],[67,[[19,[68,69]]]],[67,[[19,[68,69]]]],[67,[[19,[68,69]]]],[67,[[19,[68,69]]]],[67,[[19,[68,69]]]],[67,[[19,[68,69]]]],[67,[[19,[68,69]]]],[67,[[19,[68,69]]]],[67,[[19,[68,69]]]],[67,[[19,[68,69]]]],[67,[[19,[68,69]]]],0,[44,46],[44,[[4,[[18,[65]],70]]]],[[44,10,6],[[19,[[4,[12,70]],71]]]],[[54,42,6],[[11,[[4,[12]]]]]],[51],0,[51,[[19,[72]]]],0,[[59,7],[[19,[73]]]],[[30,7],[[19,[73]]]],[[30,7],[[19,[73]]]],[[74,7],8],[[74,7],8],[[75,7],8],[[75,7],8],[[76,7],8],[[76,7],8],[[77,7],8],[[77,7],8],[[2,7],8],[[2,7],8],[[53,7],8],[[60,7],8],[[61,7],8],[[62,7],8],[[50,7],8],[[54,7],8],[[34,7],8],[[33,7],8],[[45,7],8],[[55,7],8],[[55,7],8],[[43,7],8],[[63,7],[[19,[73]]]],[[64,7],[[19,[73]]]],[[44,7],[[19,[73]]]],[[36,7],[[19,[73]]]],[[51,7],[[19,[73]]]],[[31,7],[[19,[73]]]],[[65,7],[[19,[73]]]],[[]],[[]],[25,30],[[]],[78,74],[[]],[79,74],[80,74],[81,74],[75,74],[82,74],[83,74],[77,74],[84,74],[76,74],[85,74],[86,75],[87,75],[88,75],[89,75],[90,75],[91,75],[92,75],[93,75],[94,75],[[]],[71,75],[95,75],[96,75],[97,75],[98,75],[99,75],[100,75],[101,75],[102,75],[103,75],[104,75],[105,75],[106,75],[107,75],[57,75],[108,75],[109,76],[110,76],[[[111,[83]]],76],[[]],[[]],[23,2],[[]],[[[4,[12]]],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[112,55],[[]],[[]],[113,63],[[]],[[]],[[]],[[]],[27,36],[[]],[[]],[[]],[[114,115],51],[[],59],[10,[[19,[2]]]],[[41,35,42],[[11,[54]]]],[[53,42],[[11,[24]]]],[54,[[4,[2]]]],[[],27],[[],27],[[],27],[[44,36],[[18,[116]]]],[44],[44,117],0,0,[30],[2],[36],[30,118],[30,6],[51,[[19,[56,88]]]],[30,119],[30,120],[30,121],[30,122],[53,2],[54,1],[45,123],[63],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[2,[18,[34]],42],[[11,[53]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,[[4,[12]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[44,3],0,[[18,31,64,66],46],[44,[[18,[56]]]],0,[[53,42],[[124,[[23,[46]]]]]],[[53,125]],[[53,42],[[11,[[4,[12]]]]]],[45,[[14,[2,[18,[51]]]]]],[44,46],[[],[[19,[44,85]]]],[30,6],[64,6],0,[[44,56],[[18,[51]]]],[54,[[14,[123,[4,[63]]]]]],[44,[[4,[51,70]]]],[54,[[4,[2]]]],0,[44,[[19,[57]]]],[[44,126],[[19,[88]]]],[[2,51],45],[[64,117],46],[[64,41,[18,[[4,[[18,[65]],70]]]]],46],[[2,[4,[12]]],[[11,[45]]]],[64,6],0,[44,127],[64,6],[[44,128],[[19,[129,103]]]],[[36,36],[[18,[130]]]],0,[44,[[18,[126]]]],[44,58],0,[[44,129,[18,[131]]],46],0,0,0,[[54,42,51],[[11,[40]]]],[[44,51],46],[44,46],[[54,42,38],[[11,[40]]]],[[44,56],46],[[54,42],[[11,[40]]]],[[44,[18,[24]]],46],[132],[132],[132],[132],[[53,42],11],0,0,0,[53],0,[44,46],[[53,6,42],[[11,[[4,[24]]]]]],[44,116],[44,[[19,[85]]]],[[44,[18,[24]]],46],0,[64,133],[30,19],[60,19],[61,19],[62,19],[50,19],[63,19],[64,19],[44,19],[36,19],[51,19],[65,19],[44],[[44,64]],[[43,59]],[51,115],[31,115],[30,134],[63,131],[63,[[19,[134,91]]]],[74,[[18,[135]]]],[75,[[18,[135]]]],[76,[[18,[135]]]],[44,136],0,[[44,137]],0,[[],[[19,[30,100]]]],[[],[[19,[63,100]]]],[[],[[19,[36,100]]]],[[],[[19,[51,100]]]],[[],[[19,[31,100]]]],[[],[[19,[65,100]]]],[30,[[19,[6,100]]]],[30,[[19,[6,100]]]],[63,[[19,[6,100]]]],[36,[[19,[6,100]]]],[36,[[19,[6,100]]]],[51,[[19,[6,100]]]],[51,[[19,[6,100]]]],[31,[[19,[6,100]]]],[31,[[19,[6,100]]]],[65,[[19,[6,100]]]],[30,6],[30,6],[63,6],[36,6],[36,6],[51,6],[51,6],[31,6],[31,6],[65,6],[33,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],19],[16,[[19,[30]]]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[[4,[12]]],[[19,[55]]]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],[[19,[51]]]],[[],19],[[],19],[[],[[19,[59,84]]]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[13,13,[18,[2]],[4,[25]]],[[11,[43]]]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[51,[[19,[[4,[12,70]],100]]]],[31,[[19,[[4,[12,70]],100]]]],[64,3],[[53,42],[[11,[6]]]],[[63,115],[[19,[91]]]],[51,[[19,[138]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[64,139],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[35,[[11,[64]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[35,35],[32,32],[140,140],[[]],[[]],[[]],0,[[],35],[[],32],[[],140],[6],[6],[6],[6],[6],[6],[[],[[19,[32]]]],[[],[[19,[140]]]],[6],[6],[6],[[140,140],3],[67,[[19,[68,69]]]],[67,[[19,[68,69]]]],0,[[35,7],8],[[32,7],8],[[140,7],8],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[]],[[]],[[]],0,0,0,[32,19],[140,19],[[35,[4,[[4,[12]]]]]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],20],[[],20],[[],20],[[]],[[]],[[]],0,0,0,[[]],[[]],0,[6],[6],[6],[[29,7],8],[[]],0,[[],6],[[]],0,0,0,[[],19],[[],19],[[],20],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[6],[6],[6],[6],[6],[6],[6],[6],[6],[[40,7],8],[[21,7],8],[[26,7],8],[[],40],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[]],[[]],[[]],0,0,0,0,[40,11],[21,11],[26,11],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],20],[[],20],[[],20],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[141,10],11],[[17,141],[[11,[[4,[12]]]]]],[[142,141,10],[[11,[[4,[12]]]]]],[6],[6],[6],[6],[6],[6],[17,[[11,[[4,[12]]]]]],[[142,141,10],[[11,[[4,[12]]]]]],[[142,141],[[11,[[14,[13,[4,[12]]]]]]]],[142,13],[17,13],[[142,10],[[11,[13]]]],[[],[[11,[13]]]],[17,13],[[142,10],[[11,[13]]]],[[17,7],8],[[142,7],8],[[]],[[]],[17,10],[142,15],[[],6],[[],6],[[]],[[]],[[142,16,141],[[11,[[4,[12]]]]]],[[142,141],[[11,[[4,[12]]]]]],[[142,10],[[18,[17]]]],[[142,141,10],11],[[142,10],3],[[142,141,10],11],[[142,10],[[11,[17]]]],[[142,10],[[18,[17]]]],[[142,141,10],11],[[],19],[[],19],[[],19],[[],19],[141,[[11,[142]]]],[[],20],[[],20],[[]],[[]]],"p":[[6,"ConversationId"],[3,"ClientId"],[15,"bool"],[3,"Vec"],[3,"CoreCrypto"],[15,"usize"],[3,"Formatter"],[6,"Result"],[3,"MlsCentral"],[15,"str"],[6,"CryptoResult"],[15,"u8"],[3,"String"],[3,"HashMap"],[3,"IdentityKeyPair"],[15,"u16"],[3,"ProteusConversationSession"],[4,"Option"],[4,"Result"],[3,"TypeId"],[3,"MlsConversationCreationMessage"],[8,"CoreCryptoCallbacks"],[3,"Box"],[3,"KeyPackageBundle"],[3,"MlsCiphersuite"],[3,"MlsCommitBundle"],[15,"u64"],[8,"AsRef"],[3,"MlsConversationDecryptMessage"],[4,"CiphersuiteName"],[3,"VerifiablePublicGroupState"],[3,"MlsCustomConfiguration"],[3,"MlsConversationInitBundle"],[3,"CertificateBundle"],[3,"MlsConversationConfiguration"],[3,"GroupEpoch"],[3,"MlsMessageOut"],[6,"KeyPackageRef"],[4,"MlsProposal"],[3,"MlsProposalBundle"],[3,"Welcome"],[3,"MlsCryptoProvider"],[3,"MlsCentralConfiguration"],[3,"MlsGroup"],[3,"ConversationMember"],[8,"Future"],[4,"AeadType"],[3,"AuthenticationSecret"],[3,"MlsGroupConfigBuilder"],[4,"PublicGroupStatePayload"],[3,"KeyPackage"],[4,"KeyPackageExtensionSupportError"],[3,"Client"],[3,"MlsConversation"],[3,"MlsProposalRef"],[3,"HashReference"],[4,"MlsGroupStateError"],[8,"Iterator"],[3,"EntropySeed"],[3,"MlsPublicGroupStateBundle"],[4,"MlsPublicGroupStateEncryptionType"],[4,"MlsRatchetTreeType"],[3,"Credential"],[3,"MlsGroupConfig"],[4,"Node"],[3,"CredentialBundle"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"Global"],[4,"ExportSecretError"],[4,"ExtensionError"],[3,"Error"],[4,"CryptoError"],[4,"MlsError"],[4,"ProteusError"],[4,"CryptoboxMigrationError"],[3,"Utf8Error"],[3,"FromUtf8Error"],[3,"ParseIntError"],[4,"FromHexError"],[3,"TryFromIntError"],[4,"CryptoKeystoreError"],[4,"MlsProviderError"],[3,"Error"],[4,"UnverifiedMessageError"],[4,"ProposeRemoveMemberError"],[3,"LibraryError"],[4,"CreateMessageError"],[4,"EmptyInputError"],[4,"CredentialError"],[4,"NewGroupError"],[4,"WelcomeError"],[4,"AddMembersError"],[4,"RemoveMembersError"],[4,"CryptoError"],[4,"ExternalCommitError"],[3,"ErrorString"],[3,"Error"],[4,"Error"],[4,"ExportPublicGroupStateError"],[4,"CommitToPendingProposalsError"],[4,"ParseMessageError"],[4,"ProposeSelfUpdateError"],[4,"ProposeAddMemberError"],[4,"MlsMessageError"],[4,"KeyPackageBundleNewError"],[4,"SelfUpdateError"],[4,"DecodeError"],[4,"EncodeError"],[4,"SessionError"],[6,"ProposalRef"],[4,"MlsCredentialType"],[3,"KeyPackagePayload"],[3,"Signature"],[3,"ResumptionSecret"],[3,"GroupId"],[4,"HashType"],[4,"HpkeAeadType"],[3,"HpkeConfig"],[4,"HpkeKdfType"],[4,"HpkeKemType"],[6,"MemberId"],[3,"Pin"],[3,"Duration"],[3,"StagedCommit"],[15,"u32"],[3,"MlsMessageIn"],[3,"UnverifiedMessage"],[4,"Ordering"],[3,"SignaturePublicKey"],[3,"Demand"],[3,"SenderRatchetConfiguration"],[4,"SignatureScheme"],[8,"Error"],[4,"InnerState"],[3,"QueuedProposal"],[4,"KeyPackageVerifyError"],[3,"WireFormatPolicy"],[4,"MlsWirePolicy"],[3,"Connection"],[3,"ProteusCentral"],[13,"ConversationNotFound"],[13,"ClientNotFound"],[13,"PendingProposalNotFound"],[13,"MalformedIdentifier"],[13,"OutOfKeyPackage"],[13,"MlsProviderError"],[13,"KeyStoreError"],[13,"MlsError"],[13,"Utf8Error"],[13,"StringUtf8Error"],[13,"ParseIntError"],[13,"ConvertIntError"],[13,"HexDecodeError"],[13,"InvalidByteArrayError"],[13,"IoError"],[13,"ProteusError"],[13,"CryptoboxMigrationError"],[13,"ProteusSupportNotEnabled"],[13,"MissingKeyInValue"],[13,"WrongValueType"],[13,"MlsWelcomeError"],[13,"MlsLibraryError"],[13,"MlsInvalidMessageError"],[13,"MlsEmptyInputError"],[13,"MlsCredentialError"],[13,"MlsNewGroupError"],[13,"MlsAddMembersError"],[13,"MlsRemoveMembersError"],[13,"MlsUnverifiedMessageError"],[13,"MlsParseMessageError"],[13,"MlsKeyPackageBundleNewError"],[13,"MlsSelfUpdateError"],[13,"MlsMlsGroupStateError"],[13,"MlsMessageError"],[13,"ProposeAddMemberError"],[13,"ProposeSelfUpdateError"],[13,"ProposeRemoveMemberError"],[13,"MlsCommitToPendingProposalsError"],[13,"MlsExportPublicGroupStateError"],[13,"MlsTlsCodecError"],[13,"MlsKeystoreSerializationError"],[13,"MlsErrorString"],[13,"MlsExternalCommitError"],[13,"MlsCryptoError"],[13,"MlsExportSecretError"],[13,"ProteusDecodeError"],[13,"ProteusEncodeError"],[13,"ProteusSessionError"],[13,"Add"],[13,"Remove"],[13,"LeafNode"],[13,"ParentNode"],[13,"Plaintext"]]},\
"core_crypto_attributes":{"doc":"","t":[23],"n":["durable"],"q":["core_crypto_attributes"],"d":["Will drop current MLS group in memory and replace it with â€¦"],"i":[0],"f":[0],"p":[]},\
"core_crypto_ffi":{"doc":"","t":[13,13,4,13,3,13,13,13,3,3,6,3,13,13,3,8,4,13,3,3,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,3,6,13,13,13,3,4,4,4,13,13,13,13,13,13,13,3,13,13,13,3,4,8,13,13,13,13,13,13,11,11,11,11,10,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,12,11,11,11,11,11,11,11,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0],"n":["ByRef","CallbacksNotSet","CiphersuiteName","Ciphertext","ClientId","ClientNotFound","ClientSignatureMismatch","ClientSignatureNotFound","CommitBundle","ConversationConfiguration","ConversationId","ConversationInitBundle","ConversationNotFound","ConvertIntError","CoreCrypto","CoreCryptoCallbacks","CryptoError","CryptoboxMigrationError","CustomConfiguration","DecryptedMessage","DecryptionError","Delta","Full","GenerationOutOfBound","HexDecodeError","ImplementationError","InvalidByteArrayError","InvalidHashReference","InvalidKeyPackage","Invitee","IoError","JweEncrypted","KeyStoreError","LockPoisonError","MLS_128_DHKEMP256_AES128GCM_SHA256_P256","MLS_128_DHKEMX25519_AES128GCM_SHA256_Ed25519","MLS_128_DHKEMX25519_CHACHA20POLY1305_SHA256_Ed25519","MLS_256_DHKEMP384_AES256GCM_SHA384_P384","MLS_256_DHKEMP521_AES256GCM_SHA512_P521","MLS_256_DHKEMX448_AES256GCM_SHA512_Ed448","MLS_256_DHKEMX448_CHACHA20POLY1305_SHA512_Ed448","MalformedIdentifier","MemberAddedMessages","MemberId","MlsError","MlsNotInitialized","MlsProviderError","MlsPublicGroupStateBundle","MlsPublicGroupStateEncryptionType","MlsRatchetTreeType","MlsWirePolicy","OutOfKeyPackage","ParseIntError","PendingCommitNotFound","PendingProposalNotFound","Plaintext","Plaintext","Plaintext","ProposalBundle","ProteusError","ProteusNotInitialized","ProteusSupportNotEnabled","PublicGroupStateBundle","PublicGroupStatePayload","Serialize","StringUtf8Error","Unauthorized","UnauthorizedExternalAddProposal","UnauthorizedExternalCommit","Utf8Error","WrongEpoch","add_clients_to_conversation","aead_algorithm","aead_key_length","aead_nonce_length","authorize","bindings","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","ciphersuite","clear_pending_commit","clear_pending_group_from_external_commit","clear_pending_proposal","client_is_existing_group_user","client_keypackages","client_public_key","client_valid_keypackages_count","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","commit","commit","commit","commit_accepted","commit_delay","commit_pending_proposals","conversation_epoch","conversation_exists","conversation_id","create_conversation","custom","decrypt_message","default","deferred_init","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encrypt_message","encryption_type","encryption_type","eq","eq","eq","eq","eq","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","export_group_state","export_secret_key","external_senders","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","get_client_ids","get_hash","get_hash","has_epoch_changed","hash","hash","hash_algorithm","hash_length","hpke_aead_algorithm","hpke_config","hpke_kdf_algorithm","hpke_kem_algorithm","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_active","join_by_external_commit","key_rotation_span","kp","mac_length","merge_pending_group_from_external_commit","message","mls_init","new","new_add_proposal","new_external_add_proposal","new_external_remove_proposal","new_remove_proposal","new_update_proposal","payload","payload","process_welcome_message","proposal","proposal_ref","proposals","proteus_cryptobox_migrate","proteus_decrypt","proteus_encrypt","proteus_encrypt_batched","proteus_fingerprint","proteus_fingerprint_local","proteus_fingerprint_prekeybundle","proteus_fingerprint_remote","proteus_init","proteus_new_prekey","proteus_new_prekey_auto","proteus_session_delete","proteus_session_exists","proteus_session_from_message","proteus_session_from_prekey","proteus_session_save","provide","public_group_state","public_group_state","public_group_state","random_bytes","ratchet_tree_type","ratchet_tree_type","remove_clients_from_conversation","reseed_rng","restore_from_disk","sender_client_id","serialize","serialize","serialize","serialize","serialize","serialize","signature_algorithm","source","tls_deserialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize_detached","tls_serialize_detached","tls_serialized_len","tls_serialized_len","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_keying_material","user_authorize","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","welcome","welcome","wipe","wipe_conversation","wire_policy","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","typescript"],"q":["core_crypto_fficore_crypto_ffi::CryptoError","","","","","","","","","","","","","","","","","","core_crypto_ffi::PublicGroupStatePayload","core_crypto_ffi::bindings"],"d":["TODO: to define","Callbacks are not informed","MLS ciphersuites.","Handshake messages are always encrypted","A unique identifier for clients. A client is an identifier â€¦","This error is emitted when the requested client couldnâ€™t â€¦","The keystore has found the client, but the provided â€¦","The keystore has no knowledge of such client; this shouldnâ€¦","","See core_crypto::prelude::MlsConversationConfiguration","A unique identifier for a group/conversation. The â€¦","","This error is emitted when the requested conversation â€¦","Error when trying to convert integer sizes - usually when â€¦","","This trait is used to provide callback mechanisms for the â€¦","CoreCrypto errors","Cryptobox migration error wrapper","See core_crypto::prelude::MlsCustomConfiguration","See â€¦","Tried to decrypt a message in the wrong epoch","Contains PublicGroupState changes since previous epoch â€¦","Plain old and complete PublicGroupState","The client who created this message is likely to have â€¦","Error when trying to decode an hex-encoded string. Usually â€¦","We have done something terribly wrong","Error when trying to coerce a Vec into a [u8 ; N]","A supplied [<code>HashReference</code>] is not of the expected size: 16","Decrypted message uses an invalid KeyPackage (probably â€¦","","Standard I/O Error","PublicGroupState encrypted in a JWE","Errors that are sent by our Keystore","!!!! Something went very wrong and one of our locks has â€¦","DH KEM P256 | AES-GCM 128 | SHA2-256 | EcDSA P256","DH KEM x25519 | AES-GCM 128 | SHA2-256 | Ed25519","DH KEM x25519 | Chacha20Poly1305 | SHA2-256 | Ed25519","DH KEM P384 | AES-GCM 256 | SHA2-384 | EcDSA P384","DH KEM P521 | AES-GCM 256 | SHA2-512 | EcDSA P521","DH KEM x448 | AES-GCM 256 | SHA2-512 | Ed448","DH KEM x448 | Chacha20Poly1305 | SHA2-512 | Ed448","This error is emitted when we find a malformed (i.e. not â€¦","see core_crypto::prelude::MlsConversationCreationMessage","Type definition for the identifier of a client in a â€¦","MLS Internal Errors","A MLS operation was requested but MLS hasnâ€™t been â€¦","Errors that are sent by our MLS Provider","A PublicGroupState with metadata","PublicGroupStateEncryptionType","RatchetTreeType","Wrapper over WireFormatPolicy","A conversation member is out of local stored keypackages - â€¦","Error when trying to coerce ints into Strings","This error is emitted when a pending commmit couldnâ€™t be â€¦","This error is emitted when a pending proposal couldnâ€™t â€¦","Handshake messages are never encrypted","Unencrypted PublicGroupState","Unencrypted PublicGroupState","","Proteus Error Wrapper","The proteus client has been called but has not been â€¦","CoreCrypto hasnâ€™t been built with the <code>proteus</code> feature â€¦","","Represents the byte array in [PublicGroupStateBundle]","The <code>Serialize</code> trait provides functions to serialize a â€¦","Error when parsing <code>String</code>s that are not UTF-8","Authorization error","External Add Proposal Validation failed","External Commit sender was not authorized to perform such","Error when parsing <code>str</code>s that are not UTF-8","Incoming message is for the wrong epoch","See [core_crypto::MlsCentral::add_members_to_conversation]","Get the <code>AeadType</code> for this <code>Ciphersuite</code>.","Returns the key size of the used AEAD.","Returns the length of the nonce of the AEAD.","Function responsible for authorizing an operation. Returns â€¦","CoreCrypto FFI Details","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the internal byte array","","See [core_crypto::MlsCentral::clear_pending_commit]","See [â€¦","See [core_crypto::MlsCentral::clear_pending_proposal]","Validates if the given <code>client_id</code> belongs to one of the â€¦","See [core_crypto::MlsCentral::client_keypackages]","See [core_crypto::MlsCentral::client_public_key]","See [â€¦","","","","","","","","","","","","","","","","","","","","","","","See [core_crypto::MlsCentral::close]","","","","See [core_crypto::MlsCentral::commit_accepted]","","See [core_crypto::MlsCentral::commit_pending_proposals]","See [core_crypto::MlsCentral::conversation_epoch]","See [core_crypto::MlsCentral::conversation_exists]","","See [core_crypto::MlsCentral::new_conversation]","","See [core_crypto::MlsCentral::decrypt_message]","","Similar to CoreCrypto::new but defers MLS initialization. â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See [core_crypto::MlsCentral::encrypt_message]","","Indicates if the [payload] is encrypted or not","","","","","","","","","","","","See [core_crypto::MlsCentral::export_public_group_state]","See [core_crypto::MlsCentral::export_secret_key]","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","See [core_crypto::MlsCentral::get_client_ids]","","","","","","Get the <code>HashType</code> for this <code>Ciphersuite</code>","Get the length of the used hash algorithm.","Get the <code>HpkeAeadType</code> for this <code>Ciphersuite</code>.","Get the <code>HpkeConfig</code> for this <code>Ciphersuite</code>.","Get the <code>HpkeKdfType</code> for this <code>Ciphersuite</code>.","Get the <code>HpkeKemType</code> for this <code>Ciphersuite</code>.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","See [core_crypto::MlsCentral::join_by_external_commit]","","","Get the length of the AEAD tag.","See [â€¦","","See [core_crypto::MlsCentral::init_mls]","See [core_crypto::MlsCentral::try_new]","See [core_crypto::MlsCentral::new_proposal]","See [core_crypto::MlsCentral::new_external_add_proposal]","See [core_crypto::MlsCentral::new_external_remove_proposal]","See [core_crypto::MlsCentral::new_proposal]","See [core_crypto::MlsCentral::new_proposal]","","The PublicGroupState","See [core_crypto::MlsCentral::process_raw_welcome_message]","","","","See core_crypto::proteus::ProteusCentral::cryptobox_migrate","See core_crypto::proteus::ProteusCentral::decrypt","See core_crypto::proteus::ProteusCentral::encrypt","See core_crypto::proteus::ProteusCentral::encrypt_batched","See core_crypto::proteus::ProteusCentral::fingerprint","See core_crypto::proteus::ProteusCentral::fingerprint_local","See â€¦","See â€¦","See core_crypto::proteus::ProteusCentral::try_new","See core_crypto::proteus::ProteusCentral::new_prekey","See core_crypto::proteus::ProteusCentral::new_prekey_auto","See core_crypto::proteus::ProteusCentral::session_delete","See core_crypto::proteus::ProteusCentral::session_exists","See â€¦","See â€¦","See core_crypto::proteus::ProteusCentral::session_save <strong>Note</strong>â€¦","","","","","See [core_crypto::MlsCentral::random_bytes]","","Indicates if the [payload] contains a full, partial or â€¦","See [â€¦","see [mls_crypto_provider::MlsCryptoProvider::reseed]","See [core_crypto::MlsCentral::restore_from_disk]","","","","","","","","Get the <code>SignatureScheme</code> for this <code>Ciphersuite</code>.","","","Serialize <code>self</code> and write it to the <code>writer</code>. The function â€¦","","","Serialize <code>self</code> and return it as a byte vector.","Serialize <code>self</code> and return it as a byte vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See [core_crypto::MlsCentral::update_keying_material]","Function responsible for authorizing an operation for a â€¦","","","","","","","","","","","","","","","","","","","","","See [core_crypto::MlsCentral::wipe]","see [core_crypto::MlsCentral::wipe_conversation]","","","","","","","","","","","","","","","","","","","","",""],"i":[23,37,0,20,0,37,37,37,0,0,0,0,37,37,0,0,0,37,0,0,37,23,23,37,37,37,37,37,37,0,37,22,37,37,7,7,7,7,7,7,7,37,0,0,37,37,37,0,0,0,0,37,37,37,37,20,22,14,0,37,37,37,0,0,0,37,37,37,37,37,37,1,7,7,7,71,0,5,24,17,3,34,35,26,18,19,1,7,37,12,20,21,22,23,14,5,24,17,3,34,35,26,18,19,1,7,37,12,20,21,22,23,14,14,18,1,1,1,71,1,1,1,17,3,18,19,7,12,20,21,22,23,14,17,3,18,19,7,12,20,21,22,23,14,1,5,24,35,1,26,1,1,1,35,1,18,1,20,1,5,24,17,3,34,35,26,18,19,1,7,37,12,12,20,21,22,23,14,5,24,17,3,34,35,26,18,19,1,7,37,12,20,21,22,23,14,7,20,21,22,23,14,5,24,17,3,34,35,26,18,19,1,7,37,12,20,21,22,23,14,1,17,21,7,12,20,22,23,7,20,21,22,23,14,1,1,18,5,24,17,3,34,35,26,18,19,1,7,7,37,37,12,12,20,21,22,23,14,5,24,17,17,3,34,35,26,18,19,1,7,7,37,37,37,37,37,37,37,37,37,37,37,37,12,12,12,12,20,21,22,23,14,12,1,7,12,26,7,12,7,7,7,7,7,7,3,5,24,17,3,34,35,26,18,19,1,7,37,12,20,21,22,23,14,5,24,17,3,34,35,26,18,19,1,7,37,12,12,20,21,22,23,14,26,1,19,3,7,1,26,1,1,1,1,1,1,1,17,21,1,34,34,26,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,37,5,24,35,1,17,21,1,1,1,26,7,20,21,22,23,14,7,37,7,72,7,7,72,72,7,7,17,3,18,19,7,12,20,21,22,23,14,7,37,12,5,5,24,24,17,3,34,34,35,35,26,26,18,19,1,7,7,37,12,20,21,22,23,14,5,24,17,3,3,34,35,26,18,18,19,1,7,37,12,20,21,22,23,14,5,24,17,3,34,35,26,18,19,1,7,37,12,20,21,22,23,14,1,71,5,24,17,3,34,35,26,18,19,1,7,37,12,20,21,22,23,14,5,24,1,1,19,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,[4,[3]]],[[6,[5]]]],[7,8],[7,9],[7,9],[[[4,[10,11]],12],13],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,[[4,[10,11]]]],0,[[1,2],6],[[1,2],6],[[1,2,[4,[10]]],6],[[12,[4,[12,11]]],13],[[1,15],[[6,[[4,[[4,[10]]]]]]]],[1,[[6,[[4,[10]]]]]],[1,[[6,[16]]]],[17,17],[3,3],[18,18],[19,19],[7,7],[12,12],[20,20],[21,21],[22,22],[23,23],[14,14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,6],0,0,0,[[1,2],6],0,[[1,2],[[6,[[25,[24]]]]]],[[1,2],[[6,[16]]]],[[1,2],13],0,[[1,2,18],6],0,[[1,2],[[6,[26]]]],[[],20],[[27,27,[25,[[4,[10]]]]],[[6,[1]]]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[12],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[],[[28,[7]]]],[[],[[28,[20]]]],[[],[[28,[21]]]],[[],[[28,[22]]]],[[],[[28,[23]]]],[[],[[28,[14]]]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[1,2],[[6,[[4,[10]]]]]],0,0,[[7,7],13],[[12,12],13],[[20,20],13],[[22,22],13],[[23,23],13],[29,[[28,[30,31]]]],[29,[[28,[30,31]]]],[29,[[28,[30,31]]]],[29,[[28,[30,31]]]],[29,[[28,[30,31]]]],[29,[[28,[30,31]]]],[[1,2],[[6,[[4,[10]]]]]],[[1,2,15],[[6,[[4,[10]]]]]],0,[[5,32],33],[[24,32],33],[[17,32],33],[[3,32],33],[[34,32],33],[[35,32],33],[[26,32],33],[[18,32],33],[[19,32],33],[[1,32],33],[[7,32],[[28,[36]]]],[[7,32],[[28,[36]]]],[[37,32],[[28,[36]]]],[[37,32],[[28,[36]]]],[[12,32],[[28,[36]]]],[[12,32],[[28,[36]]]],[[20,32],[[28,[36]]]],[[21,32],[[28,[36]]]],[[22,32],[[28,[36]]]],[[23,32],[[28,[36]]]],[[14,32],[[28,[36]]]],[[]],[[]],[[]],[21,17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[38,7],[[]],[39,37],[40,37],[41,37],[42,37],[43,37],[44,37],[45,37],[46,37],[47,37],[48,37],[49,37],[[],12],[[[4,[10,11]]],12],[[[50,[11]]],12],[[]],[[]],[[]],[[]],[[]],[[]],[27,[[28,[12]]]],[[1,2],[[6,[[4,[12]]]]]],[[],16],[[],16],0,[7],[12],[7,51],[7,9],[7,52],[7,53],[7,54],[7,55],0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12,[[4,[10,11]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[1,[4,[10]],19],[[6,[35]]]],0,0,[7,9],[[1,2],6],0,[[1,12],6],[[27,27,12,[25,[[4,[10]]]]],[[6,[1]]]],[[1,2,[4,[10]]],[[6,[34]]]],[[1,2,16],[[6,[[4,[10]]]]]],[[1,2,16,[4,[10]]],[[6,[[4,[10]]]]]],[[1,2,12],[[6,[34]]]],[[1,2],[[6,[34]]]],0,0,[[1,19],[[6,[2]]]],0,0,0,[[1,27],6],[[1,27],[[6,[[4,[10]]]]]],[[1,27],[[6,[[4,[10]]]]]],[[1,[4,[56]]],[[6,[[57,[56,[4,[10]]]]]]]],[1,[[6,[56]]]],[[1,27],[[6,[56]]]],[1,[[6,[56]]]],[[1,27],[[6,[56]]]],[1,6],[[1,58],[[6,[[4,[10]]]]]],[1,[[6,[[4,[10]]]]]],[[1,27],6],[[1,27],[[6,[13]]]],[[1,27],[[6,[[4,[10]]]]]],[[1,27],6],[[1,27],6],[59],0,0,0,[[1,15],[[6,[[4,[10]]]]]],0,0,[[1,2,[4,[12]]],[[6,[24]]]],[[1,[4,[10]]],6],[1,6],0,[7,28],[20,28],[21,28],[22,28],[23,28],[14,28],[7,60],[37,[[25,[61]]]],[[],[[28,[7,62]]]],[[],[[28,[9,62]]]],[7,[[28,[9,62]]]],[7,[[28,[9,62]]]],[[],[[28,[[4,[10,11]],62]]]],[[],[[28,[[4,[10,11]],62]]]],[7,9],[7,9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],56],[[],56],[[],56],[[],28],[63,[[28,[5]]]],[[],28],[64,[[28,[24]]]],[[],28],[[],28],[[],28],[65,[[28,[34]]]],[[],28],[66,[[28,[35]]]],[67,[[28,[26]]]],[[],28],[[],28],[[],28],[[],28],[58,[[28,[7]]]],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[3,[[28,[68]]]],[[],28],[[],28],[[],28],[18,[[6,[69]]]],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[1,2],[[6,[24]]]],[[[4,[10,11]],12,[4,[12,11]]],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1,6],[[1,2],6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"p":[[3,"CoreCrypto"],[6,"ConversationId"],[3,"Invitee"],[3,"Vec"],[3,"MemberAddedMessages"],[6,"CryptoResult"],[4,"CiphersuiteName"],[4,"AeadType"],[15,"usize"],[15,"u8"],[3,"Global"],[3,"ClientId"],[15,"bool"],[4,"PublicGroupStatePayload"],[15,"u32"],[15,"u64"],[3,"PublicGroupStateBundle"],[3,"ConversationConfiguration"],[3,"CustomConfiguration"],[4,"MlsWirePolicy"],[3,"MlsPublicGroupStateBundle"],[4,"MlsPublicGroupStateEncryptionType"],[4,"MlsRatchetTreeType"],[3,"CommitBundle"],[4,"Option"],[3,"DecryptedMessage"],[15,"str"],[4,"Result"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"Formatter"],[6,"Result"],[3,"ProposalBundle"],[3,"ConversationInitBundle"],[3,"Error"],[4,"CryptoError"],[3,"MlsCiphersuite"],[3,"Utf8Error"],[3,"TryFromIntError"],[3,"Error"],[4,"FromHexError"],[3,"FromUtf8Error"],[4,"CryptoboxMigrationError"],[3,"ParseIntError"],[4,"MlsError"],[4,"MlsProviderError"],[4,"CryptoKeystoreError"],[4,"ProteusError"],[3,"Box"],[4,"HashType"],[4,"HpkeAeadType"],[3,"HpkeConfig"],[4,"HpkeKdfType"],[4,"HpkeKemType"],[3,"String"],[3,"HashMap"],[15,"u16"],[3,"Demand"],[4,"SignatureScheme"],[8,"Error"],[4,"Error"],[3,"MlsConversationCreationMessage"],[3,"MlsCommitBundle"],[3,"MlsProposalBundle"],[3,"MlsConversationInitBundle"],[3,"MlsConversationDecryptMessage"],[3,"ConversationMember"],[3,"MlsConversationConfiguration"],[3,"TypeId"],[8,"CoreCryptoCallbacks"],[8,"Serialize"],[13,"ConversationNotFound"],[13,"ClientNotFound"],[13,"PendingProposalNotFound"],[13,"MalformedIdentifier"],[13,"OutOfKeyPackage"],[13,"MlsProviderError"],[13,"KeyStoreError"],[13,"MlsError"],[13,"Utf8Error"],[13,"StringUtf8Error"],[13,"ParseIntError"],[13,"ConvertIntError"],[13,"HexDecodeError"],[13,"InvalidByteArrayError"],[13,"IoError"],[13,"ProteusError"],[13,"CryptoboxMigrationError"],[13,"ProteusSupportNotEnabled"],[13,"Plaintext"]]},\
"core_crypto_keystore":{"doc":"Wire Core-Crypto Keystore","t":[13,2,4,8,8,6,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,8,17,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16,8,8,3,3,8,3,18,3,3,3,3,3,18,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,12,12,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,12,12,12,12,11,11,10,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,12,0,12,11,12,0,12,11,0,12,12,10,11,11,11,11,11,11,11,0,12,11,12,12,11,12,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BlobTooBig","Connection","CryptoKeystoreError","CryptoKeystoreMls","CryptoKeystoreProteus","CryptoKeystoreResult","DbError","DbMigrationError","FromUtf8Error","HexDecodeError","InvalidKeySize","IoError","KeyReprError","KeyStoreValueTransformError","LockPoisonError","MissingKeyErrorKind","MissingKeyInStore","MlsGroup","MlsIdentityBundle","MlsKeyPackageBundle","MlsKeyStoreError","MlsPendingGroup","OutOfKeyPackageBundles","ParseIntError","ProteusIdentity","ProteusPrekey","ProteusSession","TryFromSliceError","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","connection","entities","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","into","into","mls_fetch_keypackage_bundles","mls_get_keypackage","mls_group_delete","mls_group_persist","mls_groups_restore","mls_keypackagebundle_count","mls_load_identity_signature","mls_pending_groups_delete","mls_pending_groups_load","mls_pending_groups_save","mls_save_identity_signature","proteus_store_prekey","provide","provide","source","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","0","0","0","0","0","0","0","0","0","0","0","actual","expected","key","Connection","DatabaseConnection","MAX_BLOB_LEN","borrow","borrow_conn","borrow_mut","check_buffer_size","close","close","count","delete","find","find_all","find_many","fmt","from","into","mls_fetch_keypackage_bundles","mls_get_keypackage","mls_group_delete","mls_group_persist","mls_groups_restore","mls_keypackagebundle_count","mls_load_identity_signature","mls_pending_groups_delete","mls_pending_groups_load","mls_pending_groups_save","mls_save_identity_signature","open","open_in_memory","open_in_memory_with_key","open_with_key","platform","prekey","proteus_store_prekey","read","remove","remove","save","store","try_from","try_into","type_id","wipe","wipe","KeystoreDatabaseConnection","borrow","borrow_mut","close","deref","deref_mut","fmt","from","into","open","open_in_memory","try_from","try_into","type_id","wipe","wipe","ConnectionType","Entity","EntityBase","EntityFindParams","MlsIdentity","MlsIdentityExt","MlsKeypackage","PK_KEY_SIZE","PersistedMlsGroup","PersistedMlsPendingGroup","ProteusIdentity","ProteusPrekey","ProteusSession","SK_KEY_SIZE","StringEntityId","as_bytes","as_hex_string","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","count","count","count","count","count","count","count","count","credential","custom_configuration","default","default","delete","delete","delete","delete","delete","delete","delete","delete","delete_by_signature","delete_by_signature","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","find_all","find_all","find_all","find_all","find_all","find_all","find_all","find_all","find_by_signature","find_by_signature","find_many","find_many","find_many","find_many","find_one","find_one","find_one","find_one","find_one","find_one","find_one","find_one","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_raw","get_free_id","group","id","id","id","id","id","id","id_bytes","id_from_slice","id_raw","id_raw","id_raw","id_raw","id_raw","id_raw","id_raw","id_raw","identity","into","into","into","into","into","into","into","into","into","key","keypackage","limit","new","offset","pending_group","pk","pk_raw","prekey","prekey","reverse","save","save","save","save","save","save","save","save","session","session","set_id","signature","sk","sk_raw","state","state","to_missing_key_err_kind","to_missing_key_err_kind","to_missing_key_err_kind","to_missing_key_err_kind","to_missing_key_err_kind","to_missing_key_err_kind","to_missing_key_err_kind","to_missing_key_err_kind","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sql","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","zeroize","zeroize","zeroize","zeroize","zeroize","zeroize","zeroize"],"q":["core_crypto_keystore","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_crypto_keystore::CryptoKeystoreError","","","","","","","","","","","","","","core_crypto_keystore::connection","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","core_crypto_keystore::connection::platform","","","","","","","","","","","","","","","","core_crypto_keystore::entities","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","Error type to represent various errors that can happen in â€¦","An interface for the specialized queries in the KeyStore","","A specialized Result for the KeyStore functions","","","","","","","","","","Error to represent when a key is not present in the â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Fetches Keypackages","Fetches a singles keypackage","Deletes <code>MlsGroups</code> from the database.","Persists a <code>MlsGroup</code>","Loads <code>MlsGroups</code> from the database. It will be returned as â€¦","Counts how many KeyPackages are stored","Retrieves an identity signature from a client id","Deletes a temporary <code>MlsGroup</code> from the database","Loads a temporary <code>MlsGroup</code> and its configuration from the â€¦","Saves a <code>MlsGroup</code> in a temporary table (typically used in â€¦","Saves the signature and credentials for a client id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Limit on the length of a blob to be stored in the database.","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Default implementation of wipe","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Entity representing a persisted <code>MlsIdentity</code>","","Entity representing a persisted <code>KeyPackage</code>","","Entity representing a persisted <code>MlsGroup</code>","Entity representing a temporary persisted <code>MlsGroup</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[5,0,0,0,0,0,5,5,5,5,5,5,5,5,5,0,5,1,1,1,5,1,5,5,1,1,1,5,1,5,1,5,1,1,0,0,1,1,1,5,5,1,5,5,5,5,5,5,5,5,5,5,1,5,46,46,46,46,46,46,46,46,46,46,46,47,1,5,5,1,1,5,1,5,1,5,1,5,48,49,50,51,52,53,54,55,56,57,58,59,59,59,0,0,0,26,26,26,60,60,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,60,60,26,26,0,26,26,26,26,26,26,26,26,26,26,60,26,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,61,0,0,0,0,0,0,40,0,0,0,0,0,40,0,36,36,36,33,38,39,40,41,42,43,44,36,33,38,39,40,41,42,43,44,36,33,38,39,40,41,42,43,44,36,33,38,39,40,41,42,43,44,61,38,39,40,41,42,43,44,42,43,36,33,61,38,39,40,41,42,43,44,62,42,38,39,40,41,42,43,44,36,38,39,40,41,42,43,44,61,38,39,40,41,42,43,44,62,42,61,38,43,44,61,38,39,40,41,42,43,44,36,36,33,38,39,40,41,42,43,44,36,36,33,38,39,40,41,42,43,44,39,39,0,38,39,41,42,43,44,39,39,32,38,39,40,41,42,43,44,0,36,33,38,39,40,41,42,43,44,41,0,33,36,33,0,40,40,0,39,33,61,38,39,40,41,42,43,44,0,38,39,42,40,40,43,44,61,38,39,40,41,42,43,44,36,33,38,39,40,41,42,43,44,33,36,36,33,38,39,40,41,42,43,44,36,36,33,38,39,40,41,42,43,44,36,33,38,39,40,41,42,43,44,38,39,40,41,42,43,44],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[[]],0,0,[[1,1],2],[[1,3],4],[[1,3],4],[[5,3],4],[[5,3],4],[[]],[6,5],[7,5],[[[9,[8]]],5],[10,5],[11,5],[1,5],[12,5],[13,5],[[]],[14,5],[[]],[[]],[15,[[17,[[9,[16]]]]]],[[],[[17,[[9,[16]]]]]],[[],[[17,[[9,[16]]]]]],[[],[[17,[[9,[16]]]]]],[[],[[17,[[9,[16]]]]]],[[],[[17,[[9,[16]]]]]],[18,[[17,[[9,[16]]]]]],[[],[[17,[[9,[16]]]]]],[[],[[17,[[9,[16]]]]]],[[],[[17,[[9,[16]]]]]],[18,[[17,[[9,[16]]]]]],[19,[[17,[[9,[16]]]]]],[20],[20],[5,[[22,[21]]]],[[]],[[],23],[[],23],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[26,[[29,[[28,[27]]]]]],[[]],[30,29],[[],[[17,[[9,[16]]]]]],[26,29],[26,[[29,[30]]]],[26,[[17,[[9,[16]]]]]],[[26,31],[[29,[[22,[32]]]]]],[[26,33],[[29,[[34,[32]]]]]],[26,[[29,[[34,[32]]]]]],[[26,3],4],[[]],[[]],[[26,15],[[17,[[9,[16]]]]]],[26,[[17,[[9,[16]]]]]],[26,[[17,[[9,[16]]]]]],[26,[[17,[[9,[16]]]]]],[26,[[17,[[9,[16]]]]]],[26,[[17,[[9,[16]]]]]],[[26,18],[[17,[[9,[16]]]]]],[26,[[17,[[9,[16]]]]]],[26,[[17,[[9,[16]]]]]],[26,[[17,[[9,[16]]]]]],[[26,18],[[17,[[9,[16]]]]]],[[18,18],[[17,[[9,[16]]]]]],[[18,18],[[17,[[9,[16]]]]]],[[[31,[18]],[31,[18]]],[[29,[26]]]],[[[31,[18]],[31,[18]]],[[29,[26]]]],0,[[26,35],[[17,[[9,[16]]]]]],[[26,19],[[17,[[9,[16]]]]]],[26,[[17,[[9,[16]]]]]],[[26,35],[[17,[[9,[16]]]]]],[[26,31],29],[[26,32],[[29,[32]]]],[26,[[17,[[9,[16]]]]]],[[],24],[[],24],[[],25],[[],[[17,[[9,[16]]]]]],[26,29],0,[[]],[[]],[27,[[17,[[9,[16]]]]]],[27],[27],[[27,3],4],[[]],[[]],[[18,18],[[17,[[9,[16]]]]]],[[18,18],[[17,[[9,[16]]]]]],[[],24],[[],24],[[],25],[27,[[17,[[9,[16]]]]]],[27,29],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[36,[[34,[37]]]],[36,23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[36,36],[33,33],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[44,44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[17,[[9,[16]]]]]],[[],[[17,[[9,[16]]]]]],[[],[[17,[[9,[16]]]]]],[[],[[17,[[9,[16]]]]]],[[],[[17,[[9,[16]]]]]],[[],[[17,[[9,[16]]]]]],[[],[[17,[[9,[16]]]]]],[[],[[17,[[9,[16]]]]]],0,0,[[],36],[[],33],[[],[[17,[[9,[16]]]]]],[[],[[17,[[9,[16]]]]]],[[],[[17,[[9,[16]]]]]],[[],[[17,[[9,[16]]]]]],[[],[[17,[[9,[16]]]]]],[[],[[17,[[9,[16]]]]]],[[],[[17,[[9,[16]]]]]],[[],[[17,[[9,[16]]]]]],[[],[[17,[[9,[16]]]]]],[[],[[17,[[9,[16]]]]]],[38],[39],[40],[41],[42],[43],[44],[[36,36],2],[[38,38],2],[[39,39],2],[[40,40],2],[[41,41],2],[[42,42],2],[[43,43],2],[[44,44],2],[33,[[17,[[9,[16]]]]]],[33,[[17,[[9,[16]]]]]],[33,[[17,[[9,[16]]]]]],[33,[[17,[[9,[16]]]]]],[33,[[17,[[9,[16]]]]]],[33,[[17,[[9,[16]]]]]],[33,[[17,[[9,[16]]]]]],[33,[[17,[[9,[16]]]]]],[[],[[17,[[9,[16]]]]]],[[],[[17,[[9,[16]]]]]],[[],[[17,[[9,[16]]]]]],[[],[[17,[[9,[16]]]]]],[[],[[17,[[9,[16]]]]]],[[],[[17,[[9,[16]]]]]],[36,[[17,[[9,[16]]]]]],[36,[[17,[[9,[16]]]]]],[36,[[17,[[9,[16]]]]]],[36,[[17,[[9,[16]]]]]],[36,[[17,[[9,[16]]]]]],[36,[[17,[[9,[16]]]]]],[36,[[17,[[9,[16]]]]]],[36,[[17,[[9,[16]]]]]],[[36,3],4],[[36,3],4],[[33,3],4],[[38,3],4],[[39,3],4],[[40,3],4],[[41,3],4],[[42,3],4],[[43,3],4],[[44,3],4],[[]],[[],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[19,[34,[37]]],39],[26,[[29,[19]]]],0,0,0,0,0,0,0,[39],[[],19],[[]],[38],[39],[40],[41],[42],[43],[44],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],36],0,0,0,[40,45],0,0,0,[[],[[17,[[9,[16]]]]]],[38,[[17,[[9,[16]]]]]],[39,[[17,[[9,[16]]]]]],[40,[[17,[[9,[16]]]]]],[41,[[17,[[9,[16]]]]]],[42,[[17,[[9,[16]]]]]],[43,[[17,[[9,[16]]]]]],[44,[[17,[[9,[16]]]]]],0,0,[[39,19]],0,0,[40,45],0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33,23],[[],23],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[36,[[29,[23]]]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[38],[39],[40],[41],[42],[43],[44]],"p":[[4,"MissingKeyErrorKind"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"CryptoKeystoreError"],[3,"TryFromSliceError"],[4,"FromHexError"],[3,"Error"],[3,"Box"],[3,"FromUtf8Error"],[4,"Error"],[3,"Utf8Error"],[3,"ParseIntError"],[3,"Error"],[15,"u32"],[8,"Future"],[3,"Pin"],[15,"str"],[15,"u16"],[3,"Demand"],[8,"Error"],[4,"Option"],[3,"String"],[4,"Result"],[3,"TypeId"],[3,"Connection"],[3,"KeystoreDatabaseConnection"],[3,"MutexGuard"],[6,"CryptoKeystoreResult"],[15,"usize"],[8,"AsRef"],[8,"Entity"],[3,"EntityFindParams"],[3,"Vec"],[6,"RawPreKeyId"],[3,"StringEntityId"],[15,"u8"],[3,"ProteusSession"],[3,"ProteusPrekey"],[3,"ProteusIdentity"],[3,"MlsKeypackage"],[3,"MlsIdentity"],[3,"PersistedMlsPendingGroup"],[3,"PersistedMlsGroup"],[3,"Zeroizing"],[8,"CryptoKeystoreMls"],[8,"CryptoKeystoreProteus"],[13,"MissingKeyInStore"],[13,"KeyReprError"],[13,"TryFromSliceError"],[13,"KeyStoreValueTransformError"],[13,"IoError"],[13,"DbError"],[13,"DbMigrationError"],[13,"ParseIntError"],[13,"MlsKeyStoreError"],[13,"HexDecodeError"],[13,"FromUtf8Error"],[13,"InvalidKeySize"],[8,"DatabaseConnection"],[8,"EntityBase"],[8,"MlsIdentityExt"]]},\
"interop":{"doc":"","t":[17,17,17,17,17,0,0,5,5,5,5,0,0,0,0,5,5,5,5,5,5,13,13,8,3,4,8,8,18,13,18,13,10,11,11,11,11,11,11,12,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,0,0,10,10,11,11,11,11,11,11,11,11,10,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,0,0,3,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,3,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,0,0,3,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,3,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11],"n":["MLS_CONVERSATION_ID","MLS_MAIN_CLIENTID","ROUNDTRIP_MSG_AMOUNT","TEST_SERVER_PORT","TEST_SERVER_URI","build","clients","main","run_mls_test","run_proteus_test","run_test","util","web","wasm","webdriver","build_wasm","find_wasm_file","spawn_http_server","setup_browser","setup_webdriver","start_webdriver_chrome","Android","AppleiOS","EmulatedClient","EmulatedClientProtocol","EmulatedClientType","EmulatedMlsClient","EmulatedProteusClient","MLS","Native","PROTEUS","Web","add_client","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","client_id","client_name","client_protocol","client_type","clone","clone_into","cmp","complement","contains","corecrypto","cryptobox","decrypt","decrypt_message","deref","deref","deref_mut","deref_mut","difference","drop","drop","empty","encrypt","encrypt_message","eq","equivalent","extend","fingerprint","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get_hash","get_keypackage","get_prekey","hash","header","init","init","init","insert","intersection","intersects","into","into","is_all","is_empty","kick_client","not","partial_cmp","process_welcome","remove","session_from_message","session_from_prekey","set","sub","sub_assign","symmetric_difference","to_owned","to_string","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","vzip","vzip","wipe","native","web","CoreCryptoNativeClient","add_client","borrow","borrow_mut","cc","client_id","client_id","client_name","client_protocol","client_type","decrypt","decrypt_message","deref","deref_mut","drop","encrypt","encrypt_message","fingerprint","fmt","from","get_keypackage","get_prekey","init","init","into","kick_client","new","prekey_last_id","process_welcome","session_from_message","session_from_prekey","try_from","try_into","type_id","vzip","wipe","CoreCryptoWebClient","add_client","borrow","borrow_mut","browser","client_id","client_id","client_name","client_protocol","client_type","decrypt","decrypt_message","deref","deref_mut","drop","encrypt","encrypt_message","fingerprint","fmt","from","get_keypackage","get_prekey","init","init","into","kick_client","new","prekey_last_id","process_welcome","session_from_message","session_from_prekey","try_from","try_into","type_id","vzip","wipe","native","web","CryptoboxNativeClient","borrow","borrow_mut","cbox","client_id","client_id","client_name","client_protocol","client_type","decrypt","deref","deref_mut","drop","encrypt","fingerprint","from","get_prekey","init","init","into","last_prekey_id","new","session_from_message","session_from_prekey","tempdir","try_from","try_into","type_id","vzip","wipe","CryptoboxWebClient","borrow","borrow_mut","browser","client_id","client_id","client_name","client_protocol","client_type","decrypt","deref","deref_mut","drop","encrypt","fingerprint","fmt","from","get_prekey","init","init","into","new","prekey_last_id","session_from_message","session_from_prekey","try_from","try_into","type_id","vzip","wipe","RunningProcess","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","init","into","is_task","new","spinner","success","try_from","try_into","type_id","update","vzip"],"q":["interop","","","","","","","","","","","","interop::build","interop::build::web","","interop::build::web::wasm","","","interop::build::web::webdriver","","","interop::clients","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","interop::clients::corecrypto","","interop::clients::corecrypto::native","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","interop::clients::corecrypto::web","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","interop::clients::cryptobox","","interop::clients::cryptobox::native","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","interop::clients::cryptobox::web","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","interop::util","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","Returns the left flags, but with all the right flags â€¦","Toggles the set of flags.","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained â€¦","","","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","Returns an empty set of flags.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that â€¦","Convert from underlying bit representation, dropping any â€¦","Convert from underlying bit representation, preserving all â€¦","","","","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and â€¦","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","","","Inserts or removes the specified flags depending on the â€¦","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> â€¦","","","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,12,14,12,14,33,12,12,12,12,12,12,12,12,12,12,14,12,14,34,34,34,34,12,12,12,12,12,0,0,35,33,12,14,12,14,12,12,14,12,35,33,12,12,12,35,12,12,12,12,12,14,14,12,14,12,12,12,12,12,33,35,12,14,12,14,35,12,12,12,12,14,12,12,33,12,12,33,12,35,35,12,12,12,12,12,14,12,12,14,12,14,12,14,12,12,14,34,0,0,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,0,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30],"f":[0,0,0,0,0,0,0,[[],1],[2,1],[2,1],[[],1],0,0,0,0,[[],1],[3,[[1,[4]]]],[[],1],[[2,5],[[1,[6]]]],[7,1],[2,[[1,[8]]]],0,0,0,0,0,0,0,0,0,0,0,[[],[[11,[[10,[9]]]]]],[[],12],[[12,12],12],[[12,12]],[[12,12],12],[[12,12]],[12,13],0,[[12,12],12],[[12,12]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],12],[[],14],[12,12],[[]],[[12,12],15],[12,12],[[12,12],7],0,0,[5,[[11,[[10,[9]]]]]],[[],[[11,[[10,[9]]]]]],[16],[16],[16],[16],[[12,12],12],[16],[16],[[],12],[5,[[11,[[10,[9]]]]]],[[],[[11,[[10,[9]]]]]],[[12,12],7],[[],7],[[12,17]],[[],[[11,[[10,[9]]]]]],[[12,18],19],[[12,18],19],[[12,18],19],[[12,18],19],[[12,18],19],[[14,18],19],[[14,18],19],[[]],[[]],[13,[[20,[12]]]],[13,12],[13,12],[17,12],[[],21],[[],[[11,[[10,[9]]]]]],[[],[[11,[[10,[9]]]]]],[12],[[],22],[[],16],[[],16],[[],[[11,[[10,[9]]]]]],[[12,12]],[[12,12],12],[[12,12],7],[[]],[[]],[12,7],[12,7],[[],[[11,[[10,[9]]]]]],[12,12],[[12,12],[[20,[15]]]],[[],[[11,[[10,[9]]]]]],[[12,12]],[5,[[11,[[10,[9]]]]]],[5,[[11,[[10,[9]]]]]],[[12,12,7]],[[12,12],12],[[12,12]],[[12,12],12],[[]],[[],23],[[12,12]],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[[12,12],12],[[]],[[]],[[],[[11,[[10,[9]]]]]],0,0,0,[26,[[11,[[10,[9]]]]]],[[]],[[]],0,[26],0,[26,5],[26,12],[26,14],[[26,5],[[11,[[10,[9]]]]]],[26,[[11,[[10,[9]]]]]],[16],[16],[16],[[26,5],[[11,[[10,[9]]]]]],[26,[[11,[[10,[9]]]]]],[26,[[11,[[10,[9]]]]]],[[26,18],19],[[]],[26,[[11,[[10,[9]]]]]],[26,[[11,[[10,[9]]]]]],[26,[[11,[[10,[9]]]]]],[[],16],[[]],[26,[[11,[[10,[9]]]]]],[[],[[1,[26]]]],0,[26,[[11,[[10,[9]]]]]],[[26,5],[[11,[[10,[9]]]]]],[[26,5],[[11,[[10,[9]]]]]],[[],24],[[],24],[[],25],[[]],[26,[[11,[[10,[9]]]]]],0,[27,[[11,[[10,[9]]]]]],[[]],[[]],0,[27],0,[27,5],[27,12],[27,14],[[27,5],[[11,[[10,[9]]]]]],[27,[[11,[[10,[9]]]]]],[16],[16],[16],[[27,5],[[11,[[10,[9]]]]]],[27,[[11,[[10,[9]]]]]],[27,[[11,[[10,[9]]]]]],[[27,18],19],[[]],[27,[[11,[[10,[9]]]]]],[27,[[11,[[10,[9]]]]]],[[],16],[27,[[11,[[10,[9]]]]]],[[]],[27,[[11,[[10,[9]]]]]],[2,[[1,[27]]]],0,[27,[[11,[[10,[9]]]]]],[[27,5],[[11,[[10,[9]]]]]],[[27,5],[[11,[[10,[9]]]]]],[[],24],[[],24],[[],25],[[]],[27,[[11,[[10,[9]]]]]],0,0,0,[[]],[[]],0,[28],0,[28,5],[28,12],[28,14],[[28,5],[[11,[[10,[9]]]]]],[16],[16],[16],[[28,5],[[11,[[10,[9]]]]]],[28,[[11,[[10,[9]]]]]],[[]],[28,[[11,[[10,[9]]]]]],[28,[[11,[[10,[9]]]]]],[[],16],[[]],0,[[],28],[[28,5],[[11,[[10,[9]]]]]],[[28,5],[[11,[[10,[9]]]]]],0,[[],24],[[],24],[[],25],[[]],[28,[[11,[[10,[9]]]]]],0,[[]],[[]],0,[29],0,[29,5],[29,12],[29,14],[[29,5],[[11,[[10,[9]]]]]],[16],[16],[16],[[29,5],[[11,[[10,[9]]]]]],[29,[[11,[[10,[9]]]]]],[[29,18],19],[[]],[29,[[11,[[10,[9]]]]]],[[],16],[29,[[11,[[10,[9]]]]]],[[]],[2,[[1,[29]]]],0,[[29,5],[[11,[[10,[9]]]]]],[[29,5],[[11,[[10,[9]]]]]],[[],24],[[],24],[[],25],[[]],[29,[[11,[[10,[9]]]]]],0,[[]],[[]],[16],[16],[16],[[30,18],19],[[]],[[],16],[[]],0,[[[0,[[31,[5]],32]],7],30],0,[[30,[0,[[31,[5]],32]]]],[[],24],[[],24],[[],25],[[30,[0,[[31,[5]],32]]]],[[]]],"p":[[6,"Result"],[4,"SocketAddr"],[3,"Path"],[3,"PathBuf"],[15,"str"],[3,"Client"],[15,"bool"],[3,"Child"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"EmulatedClientProtocol"],[15,"u8"],[4,"EmulatedClientType"],[4,"Ordering"],[15,"usize"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[4,"Option"],[15,"u64"],[3,"IndentedSection"],[3,"String"],[4,"Result"],[3,"TypeId"],[3,"CoreCryptoNativeClient"],[3,"CoreCryptoWebClient"],[3,"CryptoboxNativeClient"],[3,"CryptoboxWebClient"],[3,"RunningProcess"],[8,"AsRef"],[8,"Display"],[8,"EmulatedMlsClient"],[8,"EmulatedClient"],[8,"EmulatedProteusClient"]]},\
"mls_crypto_provider":{"doc":"Wire CoreCrypto MLS Provider","t":[3,18,3,13,13,3,3,4,6,6,13,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12],"n":["CryptoKeystore","EXPECTED_LEN","EntropySeed","EntropySeedLengthError","KeystoreError","MlsCryptoProvider","MlsCryptoProviderConfiguration","MlsProviderError","MlsProviderResult","RawEntropySeed","RngLockPoison","RustCrypto","StringError","UnsufficientEntropy","aead_decrypt","aead_encrypt","borrow","borrow","borrow","borrow","borrow","borrow","borrow_conn","borrow_keystore","borrow_keystore_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","close","close","count","crypto","db_path","default","default","delete","deref","deref_mut","derive_hpke_keypair","destroy_and_reset","drop","entropy_seed","eq","eq","eq","find","find_all","find_many","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_raw","hash","hkdf_expand","hkdf_extract","hpke_open","hpke_seal","hpke_setup_receiver_and_export","hpke_setup_sender_and_export","identity_key","in_memory","into","into","into","into","into","into","into","key_store","mls_fetch_keypackage_bundles","mls_get_keypackage","mls_group_delete","mls_group_persist","mls_groups_restore","mls_keypackagebundle_count","mls_load_identity_signature","mls_pending_groups_delete","mls_pending_groups_load","mls_pending_groups_save","mls_save_identity_signature","new_with_seed","new_with_store","open_in_memory_with_key","open_with_key","prekey","proteus_store_prekey","provide","rand","random_array","random_vec","read","remove","remove","reseed","save","sign","signature_key_gen","source","store","supported_ciphersuites","supports","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from_slice","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_new_in_memory","try_new_with_configuration","type_id","type_id","type_id","type_id","type_id","type_id","unwrap_keystore","verify_signature","vzip","vzip","vzip","vzip","vzip","vzip","wipe","0","0","actual","expected"],"q":["mls_crypto_provider","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mls_crypto_provider::MlsProviderError","","",""],"d":["","","Wrapped 32-byte entropy seed with bounds check","","","","","","","32-byte raw entropy seed","","","","","","","","","","","","","","Borrow keystore","","","","","","","","","","","","","","","Closes this provider, which in turns tears down the â€¦","","","File path or database name of the persistent storage","","","","","","","Tears down this provider and <strong>obliterates every single </strong>â€¦","","External seed for the ChaCha20 PRNG entropy pool","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Encryption master key of the encrypted-at-rest persistent â€¦","Dictates whether or not the backend storage is in memory â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Initialize a CryptoProvided with an already-configured â€¦","","","","","","","","","","","","Reseeds the internal CSPRNG entropy pool with a brand new â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","Initialize a CryptoProvider with a backend following the â€¦","","","","","","","Allows to retrieve the underlying key store directly","","","","","","","","","","","",""],"i":[0,11,0,10,10,0,0,0,0,0,10,0,10,10,1,1,1,10,11,7,12,9,7,9,9,1,10,11,7,12,9,10,11,12,10,11,12,7,9,7,9,12,1,11,7,11,11,1,9,11,12,10,11,12,7,7,7,1,10,10,11,7,12,9,1,10,10,11,7,12,9,11,1,1,1,1,1,1,1,12,12,1,10,10,11,7,12,9,9,7,7,7,7,7,7,7,7,7,7,7,1,9,7,7,7,7,10,9,1,1,7,7,7,9,7,1,1,10,7,1,1,10,11,12,10,1,10,11,7,12,9,11,1,10,11,7,12,9,9,9,9,1,10,11,7,12,9,9,1,1,10,11,7,12,9,7,40,41,42,42],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],[[6,[[4,[3]],5]]]],[[1,2],[[6,[[4,[3]],5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[7,8],[9,7],[9,7],[[]],[[]],[[]],[[]],[[]],[[]],[10,10],[11,11],[12,12],[[]],[[]],[[]],[7,8],[9,13],[7,8],[9],0,[[],1],[[],11],[7,[[16,[[15,[8,14]]]]]],[11],[11],[[1,17],18],[9,13],[11],0,[[10,10],19],[[11,11],19],[[12,12],19],[[7,20],8],[[7,21],8],[7,8],[[1,22],23],[[10,22],23],[[10,22],23],[[11,22],23],[[7,22],[[6,[24]]]],[[12,22],23],[[9,22],23],[[]],[[]],[25,10],[[]],[[]],[[]],[[]],[26,11],[[1,27],[[6,[[4,[3]],5]]]],[[1,27,28],[[6,[[4,[3]],5]]]],[[1,27],[[6,[[4,[3]],5]]]],[[1,17,29],[[6,[[4,[3]],5]]]],[[1,17],29],[[1,17,28],[[6,[[4,[3]],5]]]],[[1,17,28],[[6,[5]]]],0,0,[[]],[[]],[10,30],[[]],[[]],[[]],[[]],[9],[[7,31],[[16,[[15,[8,14]]]]]],[7,[[16,[[15,[8,14]]]]]],[7,[[16,[[15,[8,14]]]]]],[7,[[16,[[15,[8,14]]]]]],[7,[[16,[[15,[8,14]]]]]],[7,[[16,[[15,[8,14]]]]]],[[7,32],[[16,[[15,[8,14]]]]]],[7,[[16,[[15,[8,14]]]]]],[7,[[16,[[15,[8,14]]]]]],[7,[[16,[[15,[8,14]]]]]],[[7,32],[[16,[[15,[8,14]]]]]],[11,1],[[7,[33,[11]]],9],[[[20,[32]],[20,[32]]],8],[[[20,[32]],[20,[32]]],8],[[7,34],[[16,[[15,[8,14]]]]]],[[7,34],[[16,[[15,[8,14]]]]]],[35],[9],[1,6],[[1,28],[[6,[[4,[3]]]]]],[7,[[16,[[15,[8,14]]]]]],[[7,34],[[16,[[15,[8,14]]]]]],[7,8],[[9,[33,[11]]]],[7,8],[[1,36],[[6,[[4,[3]],5]]]],[[1,36],[[6,[5]]]],[10,[[33,[37]]]],[7,[[16,[[15,[8,14]]]]]],[1,[[4,[38]]]],[[1,38],[[6,[5]]]],[[]],[[]],[[]],[[],30],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],[[13,[11]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[[20,[32]],[20,[32]]],[[13,[9]]]],[[[20,[32]]],[[13,[9]]]],[12,[[13,[9]]]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[9,7],[[1,36],[[6,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[7,8],0,0,0,0],"p":[[3,"RustCrypto"],[4,"AeadType"],[15,"u8"],[3,"Vec"],[4,"CryptoError"],[4,"Result"],[3,"CryptoKeystore"],[8,"Future"],[3,"MlsCryptoProvider"],[4,"MlsProviderError"],[3,"EntropySeed"],[3,"MlsCryptoProviderConfiguration"],[6,"MlsProviderResult"],[3,"Global"],[3,"Box"],[3,"Pin"],[3,"HpkeConfig"],[3,"HpkeKeyPair"],[15,"bool"],[8,"AsRef"],[3,"EntityFindParams"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"CryptoKeystoreError"],[6,"RawEntropySeed"],[4,"HashType"],[15,"usize"],[3,"HpkeCiphertext"],[3,"String"],[15,"u32"],[15,"str"],[4,"Option"],[15,"u16"],[3,"Demand"],[4,"SignatureScheme"],[8,"Error"],[4,"Ciphersuite"],[3,"TypeId"],[13,"KeystoreError"],[13,"StringError"],[13,"EntropySeedLengthError"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
